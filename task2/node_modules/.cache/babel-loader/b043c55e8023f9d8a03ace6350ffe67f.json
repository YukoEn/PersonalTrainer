{"ast":null,"code":"import _toArray from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Week.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport dates from './utils/dates';\nimport localizer from './localizer';\nimport { navigate } from './utils/constants';\nimport TimeGrid from './TimeGrid';\n\nvar Week =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Week, _React$Component);\n\n  function Week() {\n    _classCallCheck(this, Week);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Week).apply(this, arguments));\n  }\n\n  _createClass(Week, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          date = _this$props.date,\n          props = _objectWithoutProperties(_this$props, [\"date\"]);\n\n      var range = Week.range(date, this.props);\n      return React.createElement(TimeGrid, Object.assign({}, props, {\n        range: range,\n        eventOffset: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Week;\n}(React.Component);\n\nWeek.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired\n};\nWeek.defaultProps = TimeGrid.defaultProps;\n\nWeek.navigate = function (date, action) {\n  switch (action) {\n    case navigate.PREVIOUS:\n      return dates.add(date, -1, 'week');\n\n    case navigate.NEXT:\n      return dates.add(date, 1, 'week');\n\n    default:\n      return date;\n  }\n};\n\nWeek.range = function (date, _ref) {\n  var culture = _ref.culture;\n  var firstOfWeek = localizer.startOfWeek(culture);\n  var start = dates.startOf(date, 'week', firstOfWeek);\n  var end = dates.endOf(date, 'week', firstOfWeek);\n  return dates.range(start, end);\n};\n\nWeek.title = function (date, _ref2) {\n  var formats = _ref2.formats,\n      culture = _ref2.culture;\n\n  var _Week$range = Week.range(date, {\n    culture: culture\n  }),\n      _Week$range2 = _toArray(_Week$range),\n      start = _Week$range2[0],\n      rest = _Week$range2.slice(1);\n\n  return localizer.format({\n    start: start,\n    end: rest.pop()\n  }, formats.dayRangeHeaderFormat, culture);\n};\n\nexport default Week;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Week.js"],"names":["PropTypes","React","dates","localizer","navigate","TimeGrid","Week","props","date","range","Component","propTypes","instanceOf","Date","isRequired","defaultProps","action","PREVIOUS","add","NEXT","culture","firstOfWeek","startOfWeek","start","startOf","end","endOf","title","formats","rest","format","pop","dayRangeHeaderFormat"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,I;;;;;;;;;;;;;6BAOK;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACQD,KADR;;AAEP,UAAIE,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWD,IAAX,EAAiB,KAAKD,KAAtB,CAAZ;AAEA,aACE,oBAAC,QAAD,oBAAcA,KAAd;AAAqB,QAAA,KAAK,EAAEE,KAA5B;AAAmC,QAAA,WAAW,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;;;EAdgBR,KAAK,CAACS,S;;AAAnBJ,I,CACGK,S,GAAY;AACjBH,EAAAA,IAAI,EAAER,SAAS,CAACY,UAAV,CAAqBC,IAArB,EAA2BC;AADhB,C;AADfR,I,CAKGS,Y,GAAeV,QAAQ,CAACU,Y;;AAYjCT,IAAI,CAACF,QAAL,GAAgB,UAACI,IAAD,EAAOQ,MAAP,EAAkB;AAChC,UAAQA,MAAR;AACE,SAAKZ,QAAQ,CAACa,QAAd;AACE,aAAOf,KAAK,CAACgB,GAAN,CAAUV,IAAV,EAAgB,CAAC,CAAjB,EAAoB,MAApB,CAAP;;AAEF,SAAKJ,QAAQ,CAACe,IAAd;AACE,aAAOjB,KAAK,CAACgB,GAAN,CAAUV,IAAV,EAAgB,CAAhB,EAAmB,MAAnB,CAAP;;AAEF;AACE,aAAOA,IAAP;AARJ;AAUD,CAXD;;AAaAF,IAAI,CAACG,KAAL,GAAa,UAACD,IAAD,QAAuB;AAAA,MAAdY,OAAc,QAAdA,OAAc;AAClC,MAAIC,WAAW,GAAGlB,SAAS,CAACmB,WAAV,CAAsBF,OAAtB,CAAlB;AACA,MAAIG,KAAK,GAAGrB,KAAK,CAACsB,OAAN,CAAchB,IAAd,EAAoB,MAApB,EAA4Ba,WAA5B,CAAZ;AACA,MAAII,GAAG,GAAGvB,KAAK,CAACwB,KAAN,CAAYlB,IAAZ,EAAkB,MAAlB,EAA0Ba,WAA1B,CAAV;AAEA,SAAOnB,KAAK,CAACO,KAAN,CAAYc,KAAZ,EAAmBE,GAAnB,CAAP;AACD,CAND;;AASAnB,IAAI,CAACqB,KAAL,GAAa,UAACnB,IAAD,SAAgC;AAAA,MAAvBoB,OAAuB,SAAvBA,OAAuB;AAAA,MAAdR,OAAc,SAAdA,OAAc;;AAAA,oBACpBd,IAAI,CAACG,KAAL,CAAWD,IAAX,EAAiB;AAAEY,IAAAA,OAAO,EAAPA;AAAF,GAAjB,CADoB;AAAA;AAAA,MACtCG,KADsC;AAAA,MAC5BM,IAD4B;;AAE3C,SAAO1B,SAAS,CAAC2B,MAAV,CACL;AAAEP,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,GAAG,EAAEI,IAAI,CAACE,GAAL;AAAd,GADK,EAELH,OAAO,CAACI,oBAFH,EAGLZ,OAHK,CAAP;AAKD,CAPD;;AASA,eAAed,IAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport dates from './utils/dates';\nimport localizer from './localizer';\nimport { navigate } from './utils/constants';\nimport TimeGrid from './TimeGrid';\n\nclass Week extends React.Component {\n  static propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired,\n  };\n\n  static defaultProps = TimeGrid.defaultProps;\n\n  render() {\n    let { date, ...props } = this.props\n    let range = Week.range(date, this.props)\n\n    return (\n      <TimeGrid {...props} range={range} eventOffset={15} />\n    );\n  }\n}\n\nWeek.navigate = (date, action) => {\n  switch (action){\n    case navigate.PREVIOUS:\n      return dates.add(date, -1, 'week');\n\n    case navigate.NEXT:\n      return dates.add(date, 1, 'week')\n\n    default:\n      return date;\n  }\n}\n\nWeek.range = (date, { culture }) => {\n  let firstOfWeek = localizer.startOfWeek(culture)\n  let start = dates.startOf(date, 'week', firstOfWeek)\n  let end = dates.endOf(date, 'week', firstOfWeek)\n\n  return dates.range(start, end)\n}\n\n\nWeek.title = (date, { formats, culture }) => {\n  let [start, ...rest] = Week.range(date, { culture })\n  return localizer.format(\n    { start, end: rest.pop() },\n    formats.dayRangeHeaderFormat,\n    culture\n  );\n}\n\nexport default Week\n"]},"metadata":{},"sourceType":"module"}