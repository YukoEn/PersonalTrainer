{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Popup.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport getOffset from 'dom-helpers/query/offset';\nimport getScrollTop from 'dom-helpers/query/scrollTop';\nimport getScrollLeft from 'dom-helpers/query/scrollLeft';\nimport EventCell from './EventCell';\nimport { isSelected } from './utils/selection';\nimport localizer from './localizer';\nimport { elementType, dateFormat } from './utils/propTypes';\nvar propTypes = {\n  position: PropTypes.object,\n  popupOffset: PropTypes.number,\n  events: PropTypes.array,\n  selected: PropTypes.object,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType,\n  dayHeaderFormat: dateFormat\n};\n\nvar Popup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Popup, _React$Component);\n\n  function Popup() {\n    _classCallCheck(this, Popup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Popup).apply(this, arguments));\n  }\n\n  _createClass(Popup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$popupOffs = this.props.popupOffset,\n          popupOffset = _this$props$popupOffs === void 0 ? 5 : _this$props$popupOffs,\n          _getOffset = getOffset(this.refs.root),\n          top = _getOffset.top,\n          left = _getOffset.left,\n          width = _getOffset.width,\n          height = _getOffset.height,\n          viewBottom = window.innerHeight + getScrollTop(window),\n          viewRight = window.innerWidth + getScrollLeft(window),\n          bottom = top + height,\n          right = left + width;\n\n      if (bottom > viewBottom || right > viewRight) {\n        var topOffset, leftOffset;\n        if (bottom > viewBottom) topOffset = bottom - viewBottom + (popupOffset.y || +popupOffset || 0);\n        if (right > viewRight) leftOffset = right - viewRight + (popupOffset.x || +popupOffset || 0);\n        this.setState({\n          topOffset: topOffset,\n          leftOffset: leftOffset\n        }); //eslint-disable-line\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          events = _this$props.events,\n          selected = _this$props.selected,\n          eventComponent = _this$props.eventComponent,\n          eventWrapperComponent = _this$props.eventWrapperComponent,\n          props = _objectWithoutProperties(_this$props, [\"events\", \"selected\", \"eventComponent\", \"eventWrapperComponent\"]);\n\n      var _this$props$position = this.props.position,\n          left = _this$props$position.left,\n          width = _this$props$position.width,\n          top = _this$props$position.top,\n          topOffset = (this.state || {}).topOffset || 0,\n          leftOffset = (this.state || {}).leftOffset || 0;\n      var style = {\n        top: Math.max(0, top - topOffset),\n        left: left - leftOffset,\n        minWidth: width + width / 2\n      };\n      return React.createElement(\"div\", {\n        ref: \"root\",\n        style: style,\n        className: \"rbc-overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-overlay-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, localizer.format(props.slotStart, props.dayHeaderFormat, props.culture)), events.map(function (event, idx) {\n        return React.createElement(EventCell, Object.assign({\n          key: idx\n        }, props, {\n          event: event,\n          eventComponent: eventComponent,\n          eventWrapperComponent: eventWrapperComponent,\n          selected: isSelected(event, selected),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Popup;\n}(React.Component);\n\nPopup.propTypes = propTypes;\nexport default Popup;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Popup.js"],"names":["PropTypes","React","getOffset","getScrollTop","getScrollLeft","EventCell","isSelected","localizer","elementType","dateFormat","propTypes","position","object","popupOffset","number","events","array","selected","eventComponent","eventWrapperComponent","dayHeaderFormat","Popup","props","refs","root","top","left","width","height","viewBottom","window","innerHeight","viewRight","innerWidth","bottom","right","topOffset","leftOffset","y","x","setState","state","style","Math","max","minWidth","format","slotStart","culture","map","event","idx","Component"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport getOffset from 'dom-helpers/query/offset';\nimport getScrollTop from 'dom-helpers/query/scrollTop';\nimport getScrollLeft from 'dom-helpers/query/scrollLeft';\n\nimport EventCell from './EventCell';\nimport { isSelected } from './utils/selection';\nimport localizer from './localizer';\nimport { elementType, dateFormat } from './utils/propTypes';\n\nconst propTypes = {\n  position: PropTypes.object,\n  popupOffset: PropTypes.number,\n  events: PropTypes.array,\n  selected: PropTypes.object,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType,\n  dayHeaderFormat: dateFormat\n}\nclass Popup extends React.Component {\n\n  componentDidMount(){\n    let { popupOffset = 5 } = this.props\n      , { top, left, width, height } = getOffset(this.refs.root)\n      , viewBottom = window.innerHeight + getScrollTop(window)\n      , viewRight = window.innerWidth + getScrollLeft(window)\n      , bottom = top + height\n      , right = left + width\n\n    if (bottom > viewBottom || right > viewRight) {\n      let topOffset, leftOffset;\n\n      if (bottom > viewBottom)\n        topOffset = bottom - viewBottom + (popupOffset.y || +popupOffset || 0)\n      if (right > viewRight)\n        leftOffset = right - viewRight + (popupOffset.x || +popupOffset || 0)\n\n      this.setState({ topOffset, leftOffset }) //eslint-disable-line\n    }\n  }\n\n  render() {\n    let { events, selected, eventComponent, eventWrapperComponent, ...props } = this.props;\n\n    let { left, width, top } = this.props.position\n      , topOffset = (this.state || {}).topOffset || 0\n      , leftOffset = (this.state || {}).leftOffset || 0;\n\n    let style = {\n      top: Math.max(0, top - topOffset),\n      left: left - leftOffset,\n      minWidth: width + (width / 2)\n    }\n\n    return (\n      <div ref='root' style={style} className='rbc-overlay'>\n        <div className='rbc-overlay-header'>\n          { localizer.format(props.slotStart, props.dayHeaderFormat, props.culture) }\n        </div>\n        {\n          events.map((event, idx) =>\n            <EventCell key={idx}\n              {...props}\n              event={event}\n              eventComponent={eventComponent}\n              eventWrapperComponent={eventWrapperComponent}\n              selected={isSelected(event, selected)}\n            />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nPopup.propTypes = propTypes;\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}