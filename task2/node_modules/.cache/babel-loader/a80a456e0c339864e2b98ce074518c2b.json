{"ast":null,"code":"import dates from '../utils/dates';\nimport { set } from '../formats';\nimport { set as setLocalizer } from '../localizer';\n\nvar dateRangeFormat = function dateRangeFormat(_ref, culture, local) {\n  var start = _ref.start,\n      end = _ref.end;\n  return local.format(start, 'L', culture) + ' — ' + local.format(end, 'L', culture);\n};\n\nvar timeRangeFormat = function timeRangeFormat(_ref2, culture, local) {\n  var start = _ref2.start,\n      end = _ref2.end;\n  return local.format(start, 'LT', culture) + ' — ' + local.format(end, 'LT', culture);\n};\n\nvar timeRangeStartFormat = function timeRangeStartFormat(_ref3, culture, local) {\n  var start = _ref3.start,\n      end = _ref3.end;\n  return local.format(start, 'h:mma', culture) + ' — ';\n};\n\nvar timeRangeEndFormat = function timeRangeEndFormat(_ref4, culture, local) {\n  var start = _ref4.start,\n      end = _ref4.end;\n  return ' — ' + local.format(end, 'h:mma', culture);\n};\n\nvar weekRangeFormat = function weekRangeFormat(_ref5, culture, local) {\n  var start = _ref5.start,\n      end = _ref5.end;\n  return local.format(start, 'MMM DD', culture) + ' - ' + local.format(end, dates.eq(start, end, 'month') ? 'DD' : 'MMM DD', culture);\n};\n\nexport var formats = {\n  dateFormat: 'DD',\n  dayFormat: 'ddd DD/MM',\n  weekdayFormat: 'ddd',\n  selectRangeFormat: timeRangeFormat,\n  eventTimeRangeFormat: timeRangeFormat,\n  eventTimeRangeStartFormat: timeRangeStartFormat,\n  eventTimeRangeEndFormat: timeRangeEndFormat,\n  timeGutterFormat: 'LT',\n  monthHeaderFormat: 'MMMM YYYY',\n  dayHeaderFormat: 'dddd MMM DD',\n  dayRangeHeaderFormat: weekRangeFormat,\n  agendaHeaderFormat: dateRangeFormat,\n  agendaDateFormat: 'ddd MMM DD',\n  agendaTimeFormat: 'LT',\n  agendaTimeRangeFormat: timeRangeFormat\n};\nexport default function (moment) {\n  var locale = function locale(m, c) {\n    return c ? m.locale(c) : m;\n  };\n\n  set(formats);\n  return setLocalizer({\n    firstOfWeek: function firstOfWeek(culture) {\n      var data = culture ? moment.localeData(culture) : moment.localeData();\n      return data ? data.firstDayOfWeek() : 0;\n    },\n    parse: function parse(value, format, culture) {\n      return locale(moment(value, format), culture).toDate();\n    },\n    format: function format(value, _format, culture) {\n      return locale(moment(value), culture).format(_format);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/localizers/moment.js"],"names":["dates","set","setLocalizer","dateRangeFormat","culture","local","start","end","format","timeRangeFormat","timeRangeStartFormat","timeRangeEndFormat","weekRangeFormat","eq","formats","dateFormat","dayFormat","weekdayFormat","selectRangeFormat","eventTimeRangeFormat","eventTimeRangeStartFormat","eventTimeRangeEndFormat","timeGutterFormat","monthHeaderFormat","dayHeaderFormat","dayRangeHeaderFormat","agendaHeaderFormat","agendaDateFormat","agendaTimeFormat","agendaTimeRangeFormat","moment","locale","m","c","firstOfWeek","data","localeData","firstDayOfWeek","parse","value","toDate"],"mappings":"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","sourcesContent":["import dates from '../utils/dates';\nimport { set } from '../formats';\nimport { set as setLocalizer } from '../localizer';\n\nlet dateRangeFormat = ({ start, end }, culture, local)=>\n  local.format(start, 'L', culture) + ' — ' + local.format(end, 'L', culture)\n\nlet timeRangeFormat = ({ start, end }, culture, local) =>\n  local.format(start, 'LT', culture) + ' — ' + local.format(end, 'LT', culture)\n\nlet timeRangeStartFormat = ({ start, end }, culture, local)=>\n  local.format(start, 'h:mma', culture) +' — '\n\nlet timeRangeEndFormat = ({ start, end }, culture, local)=>\n  ' — ' + local.format(end, 'h:mma', culture)\n\nlet weekRangeFormat = ({ start, end }, culture, local)=>\n  local.format(start, 'MMM DD', culture) +\n    ' - ' + local.format(end, dates.eq(start, end, 'month') ? 'DD' : 'MMM DD', culture)\n\nexport let formats = {\n  dateFormat: 'DD',\n  dayFormat: 'ddd DD/MM',\n  weekdayFormat: 'ddd',\n\n  selectRangeFormat: timeRangeFormat,\n  eventTimeRangeFormat: timeRangeFormat,\n  eventTimeRangeStartFormat: timeRangeStartFormat,\n  eventTimeRangeEndFormat: timeRangeEndFormat,\n\n  timeGutterFormat: 'LT',\n\n  monthHeaderFormat: 'MMMM YYYY',\n  dayHeaderFormat: 'dddd MMM DD',\n  dayRangeHeaderFormat: weekRangeFormat,\n  agendaHeaderFormat: dateRangeFormat,\n\n  agendaDateFormat: 'ddd MMM DD',\n  agendaTimeFormat: 'LT',\n  agendaTimeRangeFormat: timeRangeFormat\n}\n\nexport default function (moment){\n  let locale = (m, c) => c ? m.locale(c) : m;\n\n  set(formats)\n\n  return setLocalizer({\n\n    firstOfWeek(culture) {\n      let data = culture ? moment.localeData(culture) : moment.localeData();\n      return data ? data.firstDayOfWeek() : 0\n    },\n\n    parse(value, format, culture) {\n      return locale(moment(value, format), culture).toDate()\n    },\n\n    format(value, format, culture) {\n      return locale(moment(value), culture).format(format)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}