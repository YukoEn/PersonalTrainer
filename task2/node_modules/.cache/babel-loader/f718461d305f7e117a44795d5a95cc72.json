{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _constants = require('./utils/constants');\n\nvar _materialUi = require('material-ui');\n\nvar _menu = require('material-ui/svg-icons/navigation/menu');\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _keyboardArrowLeft = require('material-ui/svg-icons/hardware/keyboard-arrow-left');\n\nvar _keyboardArrowLeft2 = _interopRequireDefault(_keyboardArrowLeft);\n\nvar _keyboardArrowRight = require('material-ui/svg-icons/hardware/keyboard-arrow-right');\n\nvar _keyboardArrowRight2 = _interopRequireDefault(_keyboardArrowRight);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Toolbar = function (_React$Component) {\n  _inherits(Toolbar, _React$Component);\n\n  function Toolbar() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Toolbar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.navigate = function (action) {\n      _this.props.onNavigate(action);\n    }, _this.view = function (event, index, view) {\n      _this.props.onViewChange(view);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Toolbar.prototype.render = function render() {\n    var _props = this.props,\n        messages = _props.messages,\n        label = _props.label; // edited by onursimsek94 (button to div)\n\n    return _react2.default.createElement('div', {\n      className: 'rbc-toolbar'\n    }, _react2.default.createElement(_materialUi.MuiThemeProvider, null, _react2.default.createElement('div', {\n      className: 'rbc-btn-group'\n    }, _react2.default.createElement('div', {\n      onClick: this.props.onLeftMenu,\n      style: {\n        display: this.props.onLeftMenu ? 'inherit' : 'none'\n      }\n    }, _react2.default.createElement(_materialUi.FloatingActionButton, {\n      mini: true,\n      style: {\n        boxShadow: 'none'\n      },\n      backgroundColor: 'none',\n      iconStyle: {\n        color: 'rgb(117, 117, 117)',\n        fill: 'rgb(117, 117, 117)'\n      }\n    }, _react2.default.createElement(_menu2.default, null)), '\\xA0'), _react2.default.createElement('div', {\n      onClick: this.navigate.bind(null, _constants.navigate.TODAY)\n    }, _react2.default.createElement(_materialUi.RaisedButton, {\n      label: messages.today,\n      style: {\n        boxShadow: 'none',\n        borderRadius: '5px'\n      },\n      buttonStyle: {\n        backgroundColor: 'rgb(245, 245, 245)',\n        width: '90%',\n        borderRadius: '5px'\n      },\n      labelStyle: {\n        color: 'rgb(74, 74, 74)'\n      }\n    }), '\\xA0'), _react2.default.createElement('div', {\n      onClick: this.navigate.bind(null, _constants.navigate.PREVIOUS)\n    }, _react2.default.createElement(_materialUi.FloatingActionButton, {\n      mini: true,\n      style: {\n        boxShadow: 'none'\n      },\n      backgroundColor: 'none',\n      iconStyle: {\n        color: 'rgb(117, 117, 117)',\n        fill: 'rgb(117, 117, 117)'\n      }\n    }, _react2.default.createElement(_keyboardArrowLeft2.default, null)), '\\xA0'), _react2.default.createElement('div', {\n      onClick: this.navigate.bind(null, _constants.navigate.NEXT)\n    }, _react2.default.createElement(_materialUi.FloatingActionButton, {\n      mini: true,\n      style: {\n        boxShadow: 'none'\n      },\n      backgroundColor: 'none',\n      iconStyle: {\n        color: 'rgb(117, 117, 117)',\n        fill: 'rgb(117, 117, 117)'\n      }\n    }, _react2.default.createElement(_keyboardArrowRight2.default, null))))), _react2.default.createElement('span', {\n      className: 'rbc-toolbar-label'\n    }, label), _react2.default.createElement('span', {\n      className: 'rbc-btn-group'\n    }, this.viewNamesGroup(messages)));\n  }; // edited by onursimsek94\n\n\n  Toolbar.prototype.viewNamesGroup = function viewNamesGroup(messages) {\n    var _this2 = this;\n\n    var viewNames = this.props.views;\n    var view = this.props.view;\n\n    if (viewNames.length > 1) {\n      return _react2.default.createElement(_materialUi.MuiThemeProvider, null, _react2.default.createElement(_materialUi.DropDownMenu, {\n        value: this.props.view,\n        onChange: function onChange(event, index, value) {\n          return _this2.props.onViewChange(value);\n        }\n      }, viewNames.map(function (name) {\n        return _react2.default.createElement(_materialUi.MenuItem, {\n          key: name,\n          value: name,\n          primaryText: messages[name]\n        });\n      }))) // viewNames.map(name =>\n      //   <button type='button' key={name}\n      //     className={cn({'rbc-active': view === name})}\n      //     onClick={this.view.bind(null, name)}\n      //   >\n      //     {messages[name]}\n      //   </button>\n      // )\n      ;\n    }\n  };\n\n  return Toolbar;\n}(_react2.default.Component);\n\nToolbar.propTypes = {\n  view: _propTypes2.default.string.isRequired,\n  views: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,\n  label: _propTypes2.default.node.isRequired,\n  messages: _propTypes2.default.object,\n  onLeftMenu: _propTypes2.default.func,\n  onNavigate: _propTypes2.default.func.isRequired,\n  onViewChange: _propTypes2.default.func.isRequired\n};\nexports.default = Toolbar;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}