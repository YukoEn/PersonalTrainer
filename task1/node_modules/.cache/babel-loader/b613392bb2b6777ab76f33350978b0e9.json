{"ast":null,"code":"import _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Components/CustomerList.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport * as moment from 'moment';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AddCustomer from './AddCustomer';\n\nvar CustomerList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomerList, _Component);\n\n  function CustomerList(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerList).call(this, props));\n\n    _this.loadCustomers = function () {\n      fetch('https://customerrest.herokuapp.com/api/customers').then(function (response) {\n        return response.json();\n      }).then(function (jsondata) {\n        return _this.setState({\n          customers: jsondata.content\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.saveCustomer = function (customer) {\n      fetch('https://customerrest.herokuapp.com/api/customers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n      }).then(function (res) {\n        return _this.loadCustomers();\n      }).then(function (res) {\n        return _this.setState({\n          open: true,\n          message: 'Customer added successfully'\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.state = {\n      customers: [],\n      open: false,\n      message: ''\n    };\n    return _this;\n  } //Fetch customers\n\n\n  _createClass(CustomerList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCustomers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        Header: 'First name',\n        accessor: 'firstname'\n      }, {\n        Header: 'Last name',\n        accessor: 'lastname'\n      }, {\n        Header: 'Street address',\n        accessor: 'streetaddress'\n      }, {\n        Header: 'Postcode',\n        accessor: 'postcode'\n      }, {\n        Header: 'City',\n        accessor: 'city'\n      }, {\n        Header: 'E-mail',\n        accessor: 'email'\n      }, {\n        Header: 'Phone',\n        accessor: 'phone'\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"addCustomer\", {\n        saveCustomer: this.saveCustomer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        sortable: true,\n        filterable: true,\n        data: this.state.customers,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomerList;\n}(Component);\n\nexport default CustomerList;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Components/CustomerList.js"],"names":["React","Component","ReactTable","moment","AppBar","Toolbar","Typography","AddCustomer","CustomerList","props","loadCustomers","fetch","then","response","json","jsondata","setState","customers","content","catch","err","console","error","saveCustomer","customer","method","headers","body","JSON","stringify","res","open","message","state","columns","Header","accessor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport * as moment from 'moment';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AddCustomer from './AddCustomer';\n\nclass CustomerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { customers: [], open: false, message: '' };\n  }\n  //Fetch customers\n  componentDidMount() {\n    this.loadCustomers();\n  }\n\n  loadCustomers = () => {\n    fetch('https://customerrest.herokuapp.com/api/customers')\n      .then(response => response.json())\n      .then(jsondata => this.setState({ customers: jsondata.content }))\n      .catch(err => console.error(err));\n  };\n\n  saveCustomer = (customer) => {\n    fetch('https://customerrest.herokuapp.com/api/customers',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n\n      })\n\n      .then(res => this.loadCustomers())\n      .then(res => this.setState({ open: true, message: 'Customer added successfully' }))\n      .catch(err => console.error(err));\n  }\n\n\n\n\n\n  render() {\n    const columns = [\n      {\n        Header: 'First name',\n        accessor: 'firstname'\n      },\n      {\n        Header: 'Last name',\n        accessor: 'lastname'\n      },\n      {\n        Header: 'Street address',\n        accessor: 'streetaddress'\n      },\n      {\n        Header: 'Postcode',\n        accessor: 'postcode'\n      },\n      {\n        Header: 'City',\n        accessor: 'city'\n      },\n      {\n        Header: 'E-mail',\n        accessor: 'email'\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phone'\n      },\n    ];\n    return (\n      <div>\n        <addCustomer saveCustomer={this.saveCustomer} />\n        <ReactTable sortable={true} filterable={true} data={this.state.customers} columns={columns}></ReactTable>\n      </div>\n    );\n  }\n}\n\nexport default CustomerList;"]},"metadata":{},"sourceType":"module"}