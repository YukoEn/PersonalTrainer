{"ast":null,"code":"import _toConsumableArray from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/TimeGrid.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cn from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport dates from './utils/dates';\nimport localizer from './localizer';\nimport DayColumn from './DayColumn';\nimport TimeColumn from './TimeColumn';\nimport DateContentRow from './DateContentRow';\nimport Header from './Header';\nimport getWidth from 'dom-helpers/query/width';\nimport scrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport message from './utils/messages';\nimport { accessor, dateFormat } from './utils/propTypes';\nimport { notify } from './utils/helpers';\nimport { accessor as get } from './utils/accessors';\nimport { inRange, sortEvents, segStyle } from './utils/eventLevels';\n\nvar TimeGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimeGrid, _Component);\n\n  function TimeGrid(props) {\n    var _this;\n\n    _classCallCheck(this, TimeGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeGrid).call(this, props));\n\n    _this.handleSelectAllDaySlot = function (slots, slotInfo) {\n      var onSelectSlot = _this.props.onSelectSlot;\n      notify(onSelectSlot, {\n        slots: slots,\n        start: slots[0],\n        end: slots[slots.length - 1],\n        action: slotInfo.action\n      });\n    };\n\n    _this.state = {\n      gutterWidth: undefined,\n      isOverflowing: null\n    };\n    _this.handleSelectEvent = _this.handleSelectEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDoubleClickEvent = _this.handleDoubleClickEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHeaderClick = _this.handleHeaderClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TimeGrid, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._gutters = [];\n      this.calculateScroll();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkOverflow();\n\n      if (this.props.width == null) {\n        this.measureGutter();\n      }\n\n      this.applyScroll();\n      this.positionTimeIndicator();\n      this.triggerTimeIndicatorUpdate();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this._timeIndicatorTimeout);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.width == null && !this.state.gutterWidth) {\n        this.measureGutter();\n      }\n\n      this.applyScroll();\n      this.positionTimeIndicator(); //this.checkOverflow()\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          range = _this$props.range,\n          scrollToTime = _this$props.scrollToTime; // When paginating, reset scroll\n\n      if (!dates.eq(nextProps.range[0], range[0], 'minute') || !dates.eq(nextProps.scrollToTime, scrollToTime, 'minute')) {\n        this.calculateScroll();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          events = _this$props2.events,\n          range = _this$props2.range,\n          width = _this$props2.width,\n          startAccessor = _this$props2.startAccessor,\n          endAccessor = _this$props2.endAccessor,\n          allDayAccessor = _this$props2.allDayAccessor,\n          showMultiDayTimes = _this$props2.showMultiDayTimes;\n      width = width || this.state.gutterWidth;\n      var start = range[0],\n          end = range[range.length - 1];\n      this.slots = range.length;\n      var allDayEvents = [],\n          rangeEvents = [];\n      events.forEach(function (event) {\n        if (inRange(event, start, end, _this2.props)) {\n          var eStart = get(event, startAccessor),\n              eEnd = get(event, endAccessor);\n\n          if (get(event, allDayAccessor) || dates.isJustDate(eStart) && dates.isJustDate(eEnd) || !showMultiDayTimes && !dates.eq(eStart, eEnd, 'day')) {\n            allDayEvents.push(event);\n          } else {\n            rangeEvents.push(event);\n          }\n        }\n      });\n      allDayEvents.sort(function (a, b) {\n        return sortEvents(a, b, _this2.props);\n      });\n\n      var gutterRef = function gutterRef(ref) {\n        return _this2._gutters[1] = ref && findDOMNode(ref);\n      };\n\n      return React.createElement(\"div\", {\n        className: \"rbc-time-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.renderHeader(range, allDayEvents, width), React.createElement(\"div\", {\n        ref: \"content\",\n        className: \"rbc-time-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: \"timeIndicator\",\n        className: \"rbc-current-time-indicator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(TimeColumn, Object.assign({}, this.props, {\n        showLabels: true,\n        style: {\n          width: width\n        },\n        ref: gutterRef,\n        className: \"rbc-time-gutter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), this.renderEvents(range, rangeEvents, this.props.now)));\n    }\n  }, {\n    key: \"renderEvents\",\n    value: function renderEvents(range, events, today) {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          min = _this$props3.min,\n          max = _this$props3.max,\n          endAccessor = _this$props3.endAccessor,\n          startAccessor = _this$props3.startAccessor,\n          components = _this$props3.components;\n      return range.map(function (date, idx) {\n        var daysEvents = events.filter(function (event) {\n          return dates.inRange(date, get(event, startAccessor), get(event, endAccessor), 'day');\n        });\n        return React.createElement(DayColumn, Object.assign({}, _this3.props, {\n          min: dates.merge(date, min),\n          max: dates.merge(date, max),\n          eventComponent: components.event,\n          eventWrapperComponent: components.eventWrapper,\n          dayWrapperComponent: components.dayWrapper,\n          className: cn({\n            'rbc-now': dates.eq(date, today, 'day')\n          }),\n          style: segStyle(1, _this3.slots),\n          key: idx,\n          date: date,\n          events: daysEvents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader(range, events, width) {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          messages = _this$props4.messages,\n          rtl = _this$props4.rtl,\n          selectable = _this$props4.selectable,\n          components = _this$props4.components,\n          now = _this$props4.now;\n\n      var _ref = this.state || {},\n          isOverflowing = _ref.isOverflowing;\n\n      var style = {};\n      if (isOverflowing) style[rtl ? 'marginLeft' : 'marginRight'] = scrollbarSize() + 'px';\n      return React.createElement(\"div\", {\n        ref: \"headerCell\",\n        className: cn('rbc-time-header', isOverflowing && 'rbc-overflowing'),\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-label rbc-header-gutter\",\n        style: {\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), this.renderHeaderCells(range)), React.createElement(\"div\", {\n        className: \"rbc-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: function ref(_ref2) {\n          return _this4._gutters[0] = _ref2;\n        },\n        className: \"rbc-label rbc-header-gutter\",\n        style: {\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, message(messages).allDay), React.createElement(DateContentRow, {\n        now: now,\n        minRows: 2,\n        range: range,\n        rtl: this.props.rtl,\n        events: events,\n        className: \"rbc-allday-cell\",\n        selectable: selectable,\n        onSelectSlot: this.handleSelectAllDaySlot,\n        dateCellWrapper: components.dateCellWrapper,\n        eventComponent: this.props.components.event,\n        eventWrapperComponent: this.props.components.eventWrapper,\n        titleAccessor: this.props.titleAccessor,\n        startAccessor: this.props.startAccessor,\n        endAccessor: this.props.endAccessor,\n        allDayAccessor: this.props.allDayAccessor,\n        eventPropGetter: this.props.eventPropGetter,\n        selected: this.props.selected,\n        onSelect: this.handleSelectEvent,\n        onDoubleClick: this.handleDoubleClickEvent,\n        longPressThreshold: this.props.longPressThreshold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderHeaderCells\",\n    value: function renderHeaderCells(range) {\n      var _this5 = this;\n\n      var _this$props5 = this.props,\n          dayFormat = _this$props5.dayFormat,\n          culture = _this$props5.culture,\n          components = _this$props5.components,\n          getDrilldownView = _this$props5.getDrilldownView;\n      var HeaderComponent = components.header || Header;\n      return range.map(function (date, i) {\n        var drilldownView = getDrilldownView(date);\n        var label = localizer.format(date, dayFormat, culture);\n        var header = React.createElement(HeaderComponent, {\n          date: date,\n          label: label,\n          localizer: localizer,\n          format: dayFormat,\n          culture: culture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        });\n        return React.createElement(\"div\", {\n          key: i,\n          className: cn('rbc-header', dates.isToday(date) && 'rbc-today rbc-now' // edited by onursimsek94\n          ),\n          style: segStyle(1, _this5.slots),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, drilldownView ? React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(e) {\n            return _this5.handleHeaderClick(date, drilldownView, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, header) : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, header));\n      });\n    }\n  }, {\n    key: \"handleHeaderClick\",\n    value: function handleHeaderClick(date, view, e) {\n      e.preventDefault();\n      notify(this.props.onDrillDown, [date, view]);\n    }\n  }, {\n    key: \"handleSelectEvent\",\n    value: function handleSelectEvent() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      notify(this.props.onSelectEvent, args);\n    }\n  }, {\n    key: \"handleDoubleClickEvent\",\n    value: function handleDoubleClickEvent() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      notify(this.props.onDoubleClickEvent, args);\n    }\n  }, {\n    key: \"handleSelectAlldayEvent\",\n    value: function handleSelectAlldayEvent() {\n      //cancel any pending selections so only the event click goes through.\n      this.clearSelection();\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      notify(this.props.onSelectEvent, args);\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      clearTimeout(this._selectTimer);\n      this._pendingSelection = [];\n    }\n  }, {\n    key: \"measureGutter\",\n    value: function measureGutter() {\n      var width = this.state.gutterWidth;\n      var gutterCells = this._gutters;\n\n      if (!width) {\n        width = Math.max.apply(Math, _toConsumableArray(gutterCells.map(getWidth)));\n\n        if (width) {\n          this.setState({\n            gutterWidth: width\n          });\n        }\n      }\n    }\n  }, {\n    key: \"applyScroll\",\n    value: function applyScroll() {\n      if (this._scrollRatio) {\n        var content = this.refs.content;\n        content.scrollTop = content.scrollHeight * this._scrollRatio; // Only do this once\n\n        this._scrollRatio = null;\n      }\n    }\n  }, {\n    key: \"calculateScroll\",\n    value: function calculateScroll() {\n      var _this$props6 = this.props,\n          min = _this$props6.min,\n          max = _this$props6.max,\n          scrollToTime = _this$props6.scrollToTime;\n      var diffMillis = scrollToTime - dates.startOf(scrollToTime, 'day');\n      var totalMillis = dates.diff(max, min);\n      this._scrollRatio = diffMillis / totalMillis;\n    }\n  }, {\n    key: \"checkOverflow\",\n    value: function checkOverflow() {\n      var _this6 = this;\n\n      if (this._updatingOverflow) return;\n      var isOverflowing = this.refs.content.scrollHeight > this.refs.content.clientHeight;\n\n      if (this.state.isOverflowing !== isOverflowing) {\n        this._updatingOverflow = true;\n        this.setState({\n          isOverflowing: isOverflowing\n        }, function () {\n          _this6._updatingOverflow = false;\n        });\n      }\n    }\n  }, {\n    key: \"positionTimeIndicator\",\n    value: function positionTimeIndicator() {\n      var _this$props7 = this.props,\n          rtl = _this$props7.rtl,\n          min = _this$props7.min,\n          max = _this$props7.max;\n      var now = new Date();\n      var secondsGrid = dates.diff(max, min, 'seconds');\n      var secondsPassed = dates.diff(now, min, 'seconds');\n      var timeIndicator = this.refs.timeIndicator;\n      var factor = secondsPassed / secondsGrid;\n      var timeGutter = this._gutters[this._gutters.length - 1];\n\n      if (timeGutter && now >= min && now <= max) {\n        var pixelHeight = timeGutter.offsetHeight;\n        var offset = Math.floor(factor * pixelHeight);\n        timeIndicator.style.display = 'block';\n        timeIndicator.style[rtl ? 'left' : 'right'] = 0;\n        timeIndicator.style[rtl ? 'right' : 'left'] = timeGutter.offsetWidth + 'px';\n        timeIndicator.style.top = offset + 'px';\n      } else {\n        timeIndicator.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"triggerTimeIndicatorUpdate\",\n    value: function triggerTimeIndicatorUpdate() {\n      var _this7 = this;\n\n      // Update the position of the time indicator every minute\n      this._timeIndicatorTimeout = window.setTimeout(function () {\n        _this7.positionTimeIndicator();\n\n        _this7.triggerTimeIndicatorUpdate();\n      }, 60000);\n    }\n  }]);\n\n  return TimeGrid;\n}(Component);\n\nTimeGrid.propTypes = {\n  events: PropTypes.array.isRequired,\n  step: PropTypes.number,\n  range: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  min: PropTypes.instanceOf(Date),\n  max: PropTypes.instanceOf(Date),\n  now: PropTypes.instanceOf(Date),\n  scrollToTime: PropTypes.instanceOf(Date),\n  eventPropGetter: PropTypes.func,\n  dayFormat: dateFormat,\n  showMultiDayTimes: PropTypes.bool,\n  culture: PropTypes.string,\n  rtl: PropTypes.bool,\n  width: PropTypes.number,\n  titleAccessor: accessor.isRequired,\n  allDayAccessor: accessor.isRequired,\n  startAccessor: accessor.isRequired,\n  endAccessor: accessor.isRequired,\n  selected: PropTypes.object,\n  selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: PropTypes.number,\n  onNavigate: PropTypes.func,\n  onSelectSlot: PropTypes.func,\n  onSelectEnd: PropTypes.func,\n  onSelectStart: PropTypes.func,\n  onSelectEvent: PropTypes.func,\n  onDoubleClickEvent: PropTypes.func,\n  onDrillDown: PropTypes.func,\n  getDrilldownView: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n  components: PropTypes.object.isRequired\n};\nTimeGrid.defaultProps = {\n  step: 30,\n  min: dates.startOf(new Date(), 'day'),\n  max: dates.endOf(new Date(), 'day'),\n  scrollToTime: dates.startOf(new Date(), 'day'),\n\n  /* these 2 are needed to satisfy requirements from TimeColumn required props\n   * There is a strange bug in React, using ...TimeColumn.defaultProps causes weird crashes\n   */\n  type: 'gutter',\n  now: new Date()\n};\nexport { TimeGrid as default };","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/TimeGrid.js"],"names":["PropTypes","React","Component","cn","findDOMNode","dates","localizer","DayColumn","TimeColumn","DateContentRow","Header","getWidth","scrollbarSize","message","accessor","dateFormat","notify","get","inRange","sortEvents","segStyle","TimeGrid","props","handleSelectAllDaySlot","slots","slotInfo","onSelectSlot","start","end","length","action","state","gutterWidth","undefined","isOverflowing","handleSelectEvent","bind","handleDoubleClickEvent","handleHeaderClick","_gutters","calculateScroll","checkOverflow","width","measureGutter","applyScroll","positionTimeIndicator","triggerTimeIndicatorUpdate","window","clearTimeout","_timeIndicatorTimeout","nextProps","range","scrollToTime","eq","events","startAccessor","endAccessor","allDayAccessor","showMultiDayTimes","allDayEvents","rangeEvents","forEach","event","eStart","eEnd","isJustDate","push","sort","a","b","gutterRef","ref","renderHeader","renderEvents","now","today","min","max","components","map","date","idx","daysEvents","filter","merge","eventWrapper","dayWrapper","messages","rtl","selectable","style","renderHeaderCells","allDay","dateCellWrapper","titleAccessor","eventPropGetter","selected","longPressThreshold","dayFormat","culture","getDrilldownView","HeaderComponent","header","i","drilldownView","label","format","isToday","e","view","preventDefault","onDrillDown","args","onSelectEvent","onDoubleClickEvent","clearSelection","_selectTimer","_pendingSelection","gutterCells","Math","setState","_scrollRatio","content","refs","scrollTop","scrollHeight","diffMillis","startOf","totalMillis","diff","_updatingOverflow","clientHeight","Date","secondsGrid","secondsPassed","timeIndicator","factor","timeGutter","pixelHeight","offsetHeight","offset","floor","display","offsetWidth","top","setTimeout","propTypes","array","isRequired","step","number","arrayOf","instanceOf","func","bool","string","object","oneOf","onNavigate","onSelectEnd","onSelectStart","defaultProps","endOf","type"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cn from 'classnames';\nimport { findDOMNode } from 'react-dom';\n\nimport dates from './utils/dates';\nimport localizer from './localizer'\nimport DayColumn from './DayColumn';\nimport TimeColumn from './TimeColumn';\nimport DateContentRow from './DateContentRow';\nimport Header from './Header';\n\nimport getWidth from 'dom-helpers/query/width';\nimport scrollbarSize from 'dom-helpers/util/scrollbarSize';\nimport message from './utils/messages';\n\nimport { accessor, dateFormat } from './utils/propTypes';\n\nimport { notify } from './utils/helpers';\n\nimport { accessor as get } from './utils/accessors';\n\nimport { inRange, sortEvents, segStyle } from './utils/eventLevels';\n\nexport default class TimeGrid extends Component {\n\n  static propTypes = {\n    events: PropTypes.array.isRequired,\n\n    step: PropTypes.number,\n    range: PropTypes.arrayOf(\n      PropTypes.instanceOf(Date)\n    ),\n    min: PropTypes.instanceOf(Date),\n    max: PropTypes.instanceOf(Date),\n    now: PropTypes.instanceOf(Date),\n\n    scrollToTime: PropTypes.instanceOf(Date),\n    eventPropGetter: PropTypes.func,\n    dayFormat: dateFormat,\n    showMultiDayTimes: PropTypes.bool,\n    culture: PropTypes.string,\n\n    rtl: PropTypes.bool,\n    width: PropTypes.number,\n\n    titleAccessor: accessor.isRequired,\n    allDayAccessor: accessor.isRequired,\n    startAccessor: accessor.isRequired,\n    endAccessor: accessor.isRequired,\n\n    selected: PropTypes.object,\n    selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n    longPressThreshold: PropTypes.number,\n\n    onNavigate: PropTypes.func,\n    onSelectSlot: PropTypes.func,\n    onSelectEnd: PropTypes.func,\n    onSelectStart: PropTypes.func,\n    onSelectEvent: PropTypes.func,\n    onDoubleClickEvent: PropTypes.func,\n    onDrillDown: PropTypes.func,\n    getDrilldownView: PropTypes.func.isRequired,\n\n    messages: PropTypes.object,\n    components: PropTypes.object.isRequired,\n  }\n\n  static defaultProps = {\n    step: 30,\n    min: dates.startOf(new Date(), 'day'),\n    max: dates.endOf(new Date(), 'day'),\n    scrollToTime: dates.startOf(new Date(), 'day'),\n    /* these 2 are needed to satisfy requirements from TimeColumn required props\n     * There is a strange bug in React, using ...TimeColumn.defaultProps causes weird crashes\n     */\n    type: 'gutter',\n    now: new Date()\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { gutterWidth: undefined, isOverflowing: null };\n    this.handleSelectEvent = this.handleSelectEvent.bind(this)\n    this.handleDoubleClickEvent = this.handleDoubleClickEvent.bind(this)\n    this.handleHeaderClick = this.handleHeaderClick.bind(this)\n  }\n\n  componentWillMount() {\n    this._gutters = [];\n    this.calculateScroll();\n  }\n\n  componentDidMount() {\n    this.checkOverflow();\n\n    if (this.props.width == null) {\n      this.measureGutter()\n    }\n    this.applyScroll();\n\n    this.positionTimeIndicator();\n    this.triggerTimeIndicatorUpdate();\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this._timeIndicatorTimeout);\n  }\n\n  componentDidUpdate() {\n    if (this.props.width == null && !this.state.gutterWidth) {\n      this.measureGutter()\n    }\n\n    this.applyScroll();\n    this.positionTimeIndicator();\n    //this.checkOverflow()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { range, scrollToTime } = this.props;\n    // When paginating, reset scroll\n    if (\n      !dates.eq(nextProps.range[0], range[0], 'minute') ||\n      !dates.eq(nextProps.scrollToTime, scrollToTime, 'minute')\n    ) {\n      this.calculateScroll();\n    }\n  }\n\n  handleSelectAllDaySlot = (slots, slotInfo) => {\n    const { onSelectSlot } = this.props;\n    notify(onSelectSlot, {\n      slots,\n      start: slots[0],\n      end: slots[slots.length - 1],\n      action: slotInfo.action\n    })\n  }\n\n  render() {\n    let {\n        events\n      , range\n      , width\n      , startAccessor\n      , endAccessor\n      , allDayAccessor\n      , showMultiDayTimes} = this.props;\n\n    width = width || this.state.gutterWidth;\n\n    let start = range[0]\n      , end = range[range.length - 1]\n\n    this.slots = range.length;\n\n    let allDayEvents = []\n      , rangeEvents = [];\n\n    events.forEach(event => {\n      if (inRange(event, start, end, this.props)) {\n        let eStart = get(event, startAccessor)\n          , eEnd = get(event, endAccessor);\n\n        if (get(event, allDayAccessor)\n          || (dates.isJustDate(eStart) && dates.isJustDate(eEnd))\n          || (!showMultiDayTimes && !dates.eq(eStart, eEnd, 'day'))) {\n          allDayEvents.push(event)\n        } else {\n          rangeEvents.push(event)\n        }\n      }\n    })\n\n    allDayEvents.sort((a, b) => sortEvents(a, b, this.props))\n\n    let gutterRef = ref => this._gutters[1] = ref && findDOMNode(ref);\n\n    return (\n      <div className='rbc-time-view'>\n\n        {this.renderHeader(range, allDayEvents, width)}\n\n        <div ref='content' className='rbc-time-content'>\n          <div ref='timeIndicator' className='rbc-current-time-indicator' />\n\n          <TimeColumn\n            {...this.props}\n            showLabels\n            style={{ width }}\n            ref={gutterRef}\n            className='rbc-time-gutter'\n          />\n\n          {this.renderEvents(range, rangeEvents, this.props.now)}\n\n        </div>\n      </div>\n    );\n  }\n\n  renderEvents(range, events, today){\n    let { min, max, endAccessor, startAccessor, components } = this.props;\n\n    return range.map((date, idx) => {\n      let daysEvents = events.filter(\n        event => dates.inRange(date,\n          get(event, startAccessor),\n          get(event, endAccessor), 'day')\n      )\n\n      return (\n        <DayColumn\n          {...this.props }\n          min={dates.merge(date, min)}\n          max={dates.merge(date, max)}\n          eventComponent={components.event}\n          eventWrapperComponent={components.eventWrapper}\n          dayWrapperComponent={components.dayWrapper}\n          className={cn({ 'rbc-now': dates.eq(date, today, 'day') })}\n          style={segStyle(1, this.slots)}\n          key={idx}\n          date={date}\n          events={daysEvents}\n        />\n      )\n    })\n  }\n\n  renderHeader(range, events, width) {\n    let { messages, rtl, selectable, components, now } = this.props;\n    let { isOverflowing } = this.state || {};\n\n    let style = {};\n    if (isOverflowing)\n      style[rtl ? 'marginLeft' : 'marginRight'] = scrollbarSize() + 'px';\n\n    return (\n      <div\n        ref='headerCell'\n        className={cn(\n          'rbc-time-header',\n          isOverflowing && 'rbc-overflowing'\n        )}\n        style={style}\n      >\n        <div className='rbc-row'>\n          <div\n            className='rbc-label rbc-header-gutter'\n            style={{ width }}\n          />\n          { this.renderHeaderCells(range) }\n        </div>\n        <div className='rbc-row'>\n          <div\n            ref={ref => this._gutters[0] = ref}\n            className='rbc-label rbc-header-gutter'\n            style={{ width }}\n          >\n            { message(messages).allDay }\n          </div>\n          <DateContentRow\n            now={now}\n            minRows={2}\n            range={range}\n            rtl={this.props.rtl}\n            events={events}\n            className='rbc-allday-cell'\n            selectable={selectable}\n            onSelectSlot={this.handleSelectAllDaySlot}\n            dateCellWrapper={components.dateCellWrapper}\n            eventComponent={this.props.components.event}\n            eventWrapperComponent={this.props.components.eventWrapper}\n            titleAccessor={this.props.titleAccessor}\n            startAccessor={this.props.startAccessor}\n            endAccessor={this.props.endAccessor}\n            allDayAccessor={this.props.allDayAccessor}\n            eventPropGetter={this.props.eventPropGetter}\n            selected={this.props.selected}\n            onSelect={this.handleSelectEvent}\n            onDoubleClick={this.handleDoubleClickEvent}\n            longPressThreshold={this.props.longPressThreshold}\n          />\n        </div>\n      </div>\n    )\n  }\n\n  renderHeaderCells(range){\n    let { dayFormat, culture, components, getDrilldownView } = this.props;\n    let HeaderComponent = components.header || Header\n\n    return range.map((date, i) => {\n      let drilldownView = getDrilldownView(date);\n      let label = localizer.format(date, dayFormat, culture);\n\n      let header = (\n        <HeaderComponent\n          date={date}\n          label={label}\n          localizer={localizer}\n          format={dayFormat}\n          culture={culture}\n        />\n      )\n\n      return (\n        <div\n          key={i}\n          className={cn(\n            'rbc-header',\n            dates.isToday(date) && 'rbc-today rbc-now', // edited by onursimsek94\n          )}\n          style={segStyle(1, this.slots)}\n        >\n          {drilldownView ? (\n            <a\n              href='#'\n              onClick={e => this.handleHeaderClick(date, drilldownView, e)}\n            >\n              {header}\n            </a>\n          ) : (\n            <span>\n              {header}\n            </span>\n          )}\n        </div>\n      )\n    })\n  }\n\n  handleHeaderClick(date, view, e){\n    e.preventDefault()\n    notify(this.props.onDrillDown, [date, view])\n  }\n\n  handleSelectEvent(...args) {\n    notify(this.props.onSelectEvent, args)\n  }\n\n  handleDoubleClickEvent(...args) {\n    notify(this.props.onDoubleClickEvent, args)\n  }\n\n  handleSelectAlldayEvent(...args) {\n    //cancel any pending selections so only the event click goes through.\n    this.clearSelection()\n    notify(this.props.onSelectEvent, args)\n  }\n\n  clearSelection(){\n    clearTimeout(this._selectTimer)\n    this._pendingSelection = [];\n  }\n\n  measureGutter() {\n    let width = this.state.gutterWidth;\n    let gutterCells = this._gutters;\n\n    if (!width) {\n      width = Math.max(...gutterCells.map(getWidth));\n\n      if (width) {\n        this.setState({ gutterWidth: width })\n      }\n    }\n  }\n\n  applyScroll() {\n    if (this._scrollRatio) {\n      const { content } = this.refs;\n      content.scrollTop = content.scrollHeight * this._scrollRatio;\n      // Only do this once\n      this._scrollRatio = null;\n    }\n  }\n\n  calculateScroll() {\n    const { min, max, scrollToTime } = this.props;\n\n    const diffMillis = scrollToTime - dates.startOf(scrollToTime, 'day');\n    const totalMillis = dates.diff(max, min);\n\n    this._scrollRatio = diffMillis / totalMillis;\n  }\n\n  checkOverflow() {\n    if (this._updatingOverflow) return;\n\n    let isOverflowing = this.refs.content.scrollHeight > this.refs.content.clientHeight;\n\n    if (this.state.isOverflowing !== isOverflowing) {\n      this._updatingOverflow = true;\n      this.setState({ isOverflowing }, () => {\n        this._updatingOverflow = false;\n      })\n    }\n  }\n\n  positionTimeIndicator() {\n    const { rtl, min, max } = this.props\n    const now = new Date();\n\n    const secondsGrid = dates.diff(max, min, 'seconds');\n    const secondsPassed = dates.diff(now, min, 'seconds');\n\n    const timeIndicator = this.refs.timeIndicator;\n    const factor = secondsPassed / secondsGrid;\n    const timeGutter = this._gutters[this._gutters.length - 1];\n\n    if (timeGutter && now >= min && now <= max) {\n      const pixelHeight = timeGutter.offsetHeight;\n      const offset = Math.floor(factor * pixelHeight);\n\n      timeIndicator.style.display = 'block';\n      timeIndicator.style[rtl ? 'left' : 'right'] = 0;\n      timeIndicator.style[rtl ? 'right' : 'left'] = timeGutter.offsetWidth + 'px';\n      timeIndicator.style.top = offset + 'px';\n    } else {\n      timeIndicator.style.display = 'none';\n    }\n  }\n\n  triggerTimeIndicatorUpdate() {\n    // Update the position of the time indicator every minute\n    this._timeIndicatorTimeout = window.setTimeout(() => {\n      this.positionTimeIndicator();\n\n      this.triggerTimeIndicatorUpdate();\n    }, 60000)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}