{"ast":null,"code":"import _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/App.js\";\nimport React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./App.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar-like-google/lib/css/react-big-calendar.css\";\nimport ExampleControlSlot from './ExampleControlSlot.js';\nimport 'react-big-calendar/lib/less/styles.less';\nimport './styles.less';\nimport './prism.less';\nimport \"./bootstrap/4.3.1/bootstrap.min.css\"; //import \"./font-awesome/4.2.0/font-awesome.min.css\";\n//import './codemirror/5.45.0/codemirror';\n\nimport './codemirror/5.45.0/codemirror.min.css';\nimport './codemirror/5.45.0/neo.min.css'; //import './codemirror/5.45.0/javascript';\n\nvar localizer = BigCalendar.momentLocalizer(moment);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.loadTrainings = function () {\n      fetch('https://customerrest.herokuapp.com/gettrainings').then(function (response) {\n        return response.json();\n      }).then(function (jsondata) {\n        return _this.setState({\n          trainings: jsondata\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.eventStyleGetter = function (event, start, end, isSelected) {\n      console.log(event);\n      var backgroundColor = '#' + event.hexColor;\n      var style = {\n        backgroundColor: backgroundColor,\n        borderRadius: '0px',\n        opacity: 0.8,\n        color: 'black',\n        border: '0px',\n        display: 'block'\n      };\n      return {\n        style: style\n      };\n    };\n\n    _this.Event = function (even) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, event.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, event.desc));\n    };\n\n    _this.state = {\n      trainings: [],\n      events: [{\n        start: new Date(),\n        end: new Date(moment().add(1, \"days\")),\n        title: 'some title'\n      }]\n    };\n    return _this;\n  } //Fetch trainings\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadTrainings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var allViews = Object.keys(BigCalendar.Views).map(function (k) {\n        return BigCalendar.Views[k];\n      });\n      var eventItem = this.state.trainings.map(function (obj, index) {\n        var container = {};\n        container.start = new Date(moment(obj.date).format('LLL'));\n        container.end = new Date(moment(obj.date).add(obj.duration, 'minutes').format('LLL'));\n        container.title = obj.activity;\n        container.desc = '#' + obj.customer.id + ' ' + obj.customer.firstname + ' ' + obj.customer.lastname;\n        return container;\n      });\n      console.log(eventItem);\n\n      var EventAgenda = function EventAgenda(_ref) {\n        var event = _ref.event;\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, event.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, event.desc));\n      };\n      /*const EventAgenda = ({ event }) => (\n        <span>\n          <em style={{ color: 'magenta' }}>{event.title}</em>\n          <p>{event.desc}</p>\n        </span>\n      );*/\n\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        defaultDate: new Date(),\n        defaultView: \"month\",\n        events: eventItem,\n        views: allViews,\n        step: 15,\n        timeslots: 8,\n        style: {\n          height: \"90vh\",\n          width: \"90vw\"\n        },\n        components: {\n          event: Event,\n          agenda: {\n            event: EventAgenda\n          }\n        },\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/App.js"],"names":["React","Component","BigCalendar","moment","ExampleControlSlot","localizer","momentLocalizer","App","props","loadTrainings","fetch","then","response","json","jsondata","setState","trainings","catch","err","console","error","eventStyleGetter","event","start","end","isSelected","log","backgroundColor","hexColor","style","borderRadius","opacity","color","border","display","Event","even","title","desc","state","events","Date","add","allViews","Object","keys","Views","map","k","eventItem","obj","index","container","date","format","duration","activity","customer","id","firstname","lastname","EventAgenda","height","width","agenda"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\n\nimport \"./App.css\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-big-calendar-like-google/lib/css/react-big-calendar.css\";\nimport ExampleControlSlot from './ExampleControlSlot.js'\n\nimport 'react-big-calendar/lib/less/styles.less';\nimport './styles.less';\nimport './prism.less';\nimport \"./bootstrap/4.3.1/bootstrap.min.css\";\n//import \"./font-awesome/4.2.0/font-awesome.min.css\";\n\n//import './codemirror/5.45.0/codemirror';\nimport './codemirror/5.45.0/codemirror.min.css';\nimport './codemirror/5.45.0/neo.min.css';\n//import './codemirror/5.45.0/javascript';\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainings: [],\n      events: [\n        {\n          start: new Date(),\n          end: new Date(moment().add(1, \"days\")),\n          title: 'some title'\n        }\n      ]\n    };\n  }\n\n  //Fetch trainings\n  componentDidMount() {\n    this.loadTrainings();\n  }\n\n  loadTrainings = () => {\n    fetch('https://customerrest.herokuapp.com/gettrainings')\n      .then(response => response.json())\n      .then(jsondata => this.setState({ trainings: jsondata }))\n      .catch(err => console.error(err));\n  };\n\n  eventStyleGetter = (event, start, end, isSelected) => {\n    console.log(event);\n    var backgroundColor = '#' + event.hexColor;\n    var style = {\n      backgroundColor: backgroundColor,\n      borderRadius: '0px',\n      opacity: 0.8,\n      color: 'black',\n      border: '0px',\n      display: 'block'\n    };\n    return {\n      style: style\n    };\n  }\n\n  Event = (even) => (\n    <span>\n      <strong>{event.title}</strong>\n      <p>{event.desc}</p>\n    </span>\n  );\n\n\n\n\n\n\n\n\n  render() {\n    let allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k])\n\n    const eventItem = this.state.trainings.map((obj, index) => {\n      let container = {};\n      container.start = new Date(moment(obj.date).format('LLL'))\n      container.end = new Date(moment(obj.date).add(obj.duration, 'minutes').format('LLL'));\n      container.title = obj.activity;\n      container.desc = '#' + obj.customer.id + ' ' + obj.customer.firstname + ' ' + obj.customer.lastname;\n      return container;\n    });\n\n    console.log(eventItem);\n\n\n\n    const EventAgenda = ({ event }) => (\n      <span>\n      <strong>{event.title}</strong>\n      <p>{event.desc}</p>\n    </span>\n    );\n\n\n    /*const EventAgenda = ({ event }) => (\n      <span>\n        <em style={{ color: 'magenta' }}>{event.title}</em>\n        <p>{event.desc}</p>\n      </span>\n    );*/\n\n\n\n\n    return (\n      <div className=\"App\">\n\n        <BigCalendar\n          localizer={localizer}\n          defaultDate={new Date()}\n          defaultView=\"month\"\n          events={eventItem}\n          views={allViews}\n          step={15}\n          timeslots={8}\n          style={{ height: \"90vh\", width: \"90vw\" }}\n          components={{\n            event: Event,\n            agenda: {\n              event: EventAgenda\n            }\n          }}\n\n          eventPropGetter={this.eventStyleGetter}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}