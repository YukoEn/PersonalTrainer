{"ast":null,"code":"import _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Components/TrainingList.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport * as moment from 'moment';\nimport AddNewTraining from './AddNewTraining';\nimport EditTraining from './EditTraining';\n\nvar TrainingList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrainingList, _Component);\n\n  function TrainingList(props) {\n    var _this;\n\n    _classCallCheck(this, TrainingList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrainingList).call(this, props));\n\n    _this.loadTrainings = function () {\n      fetch('https://customerrest.herokuapp.com/gettrainings').then(function (response) {\n        return response.json();\n      }).then(function (jsondata) {\n        return _this.setState({\n          trainings: jsondata\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.deleteTraining = function (trainingId) {\n      console.log('https://customerrest.herokuapp.com/api/trainings/' + trainingId);\n      /*\n        if (window.confirm(\"Are you sure?\")) {\n          fetch('https://customerrest.herokuapp.com/api/trainings/' + trainingId, { method: 'DELETE' })\n            .then(res => this.loadTrainings())\n            .then(res => this.setState({ open: true, message: 'Training deleted' }))\n            .catch(err => console.error(err));\n        }\n        */\n    };\n\n    _this.saveTraining = function (training) {\n      fetch('https://customerrest.herokuapp.com/api/trainings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(training)\n      }).then(function (res) {\n        return _this.loadTrainings();\n      }).then(function (res) {\n        return _this.setState({\n          open: true,\n          message: 'Training added successfully'\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      trainings: [],\n      open: false,\n      message: ''\n    };\n    return _this;\n  } //Fetch trainings\n\n\n  _createClass(TrainingList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadTrainings();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = [{\n        Header: 'Date',\n        accessor: 'date',\n        Cell: function Cell(_ref) {\n          var value = _ref.value;\n          return moment(value).format('LL');\n        }\n      }, {\n        Header: 'Duration',\n        accessor: 'duration'\n      }, {\n        Header: 'Activity',\n        accessor: 'activity'\n      }, {\n        Header: 'Customer',\n        accessor: 'customer',\n        Cell: function Cell(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"class-for-id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, '#' + row.row.customer.id), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"class-for-firstname\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, row.row.customer.firstname + ' '), React.createElement(\"span\", {\n            className: \"class-for-lastname\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, row.row.customer.lastname + ' '), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"class-for-streetaddress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, row.row.customer.streetaddress + ' '));\n        }\n      }, {\n        Header: '',\n        accessor: 'id',\n        filterable: false,\n        sortable: false,\n        width: 100,\n        Cell: function Cell(_ref2) {\n          var value = _ref2.value;\n          return React.createElement(Button, {\n            color: \"secondary\",\n            onClick: function onClick() {\n              return _this2.deleteTraining(value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"Delete\");\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(AddNewTraining, {\n        saveTraining: this.saveTraining,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        sortable: true,\n        filterable: true,\n        data: this.state.trainings,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TrainingList;\n}(Component);\n\nexport default TrainingList;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Components/TrainingList.js"],"names":["React","Component","ReactTable","Button","Snackbar","moment","AddNewTraining","EditTraining","TrainingList","props","loadTrainings","fetch","then","response","json","jsondata","setState","trainings","catch","err","console","error","deleteTraining","trainingId","log","saveTraining","training","method","headers","body","JSON","stringify","res","open","message","handleClose","state","columns","Header","accessor","Cell","value","format","row","customer","id","firstname","lastname","streetaddress","filterable","sortable","width","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport * as moment from 'moment';\nimport AddNewTraining from './AddNewTraining';\nimport EditTraining from './EditTraining';\n\nclass TrainingList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { trainings: [], open: false, message: '' };\n  }\n  //Fetch trainings\n  componentDidMount() {\n    this.loadTrainings();\n  }\n\n  loadTrainings = () => {\n    fetch('https://customerrest.herokuapp.com/gettrainings')\n      .then(response => response.json())\n      .then(jsondata => this.setState({ trainings: jsondata }))\n      .catch(err => console.error(err));\n  };\n\n  deleteTraining = (trainingId) => {\n    console.log('https://customerrest.herokuapp.com/api/trainings/' + trainingId);\n    /*\n      if (window.confirm(\"Are you sure?\")) {\n        fetch('https://customerrest.herokuapp.com/api/trainings/' + trainingId, { method: 'DELETE' })\n          .then(res => this.loadTrainings())\n          .then(res => this.setState({ open: true, message: 'Training deleted' }))\n          .catch(err => console.error(err));\n      }\n      */\n\n  };\n\n\n  saveTraining = (training) => {\n    fetch('https://customerrest.herokuapp.com/api/trainings',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(training)\n\n      })\n\n      .then(res => this.loadTrainings())\n      .then(res => this.setState({ open: true, message: 'Training added successfully' }))\n      .catch(err => console.error(err));\n  }\n  /*\n    modifyTraining = (link, training) => {\n      fetch(link,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(training)\n  \n        })\n  \n        .then(res => this.loadTrainings())\n        .then(res => this.setState({ open: true, message: 'Changes saved' }))\n        .catch(err => console.error(err));\n    }\n  \n  \n  \n          {\n          Header: '',\n          accessor: 'links[0].href',\n          filterable: false,\n          sortable: false,\n          width: 100,\n          Cell: ({ value, row }) => <EditTraining modifyTraining={this.modifyTraining} link={value} training={row} />\n        },\n  \n  \n  \n  */\n\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Date',\n        accessor: 'date',\n        Cell: ({ value }) => moment(value).format('LL')\n\n      },\n      {\n        Header: 'Duration',\n        accessor: 'duration'\n      },\n      {\n        Header: 'Activity',\n        accessor: 'activity'\n      },\n\n      {\n        Header: 'Customer',\n        accessor: 'customer',\n        Cell: row => {\n          return (\n            <div>\n              <span className=\"class-for-id\">{'#' + row.row.customer.id}</span><br></br>\n              <span className=\"class-for-firstname\">{row.row.customer.firstname + ' '}</span>\n              <span className=\"class-for-lastname\">{row.row.customer.lastname + ' '}</span><br></br>\n              <span className=\"class-for-streetaddress\">{row.row.customer.streetaddress + ' '}</span>\n\n            </div>\n          )\n        }\n\n\n\n      },\n\n      {\n        Header: '',\n        accessor: 'id',\n        filterable: false,\n        sortable: false,\n        width: 100,\n        Cell: ({ value }) => <Button color=\"secondary\" onClick={() => this.deleteTraining(value)}>Delete</Button>\n      },\n\n    ];\n    return (\n      <div>\n        <AddNewTraining saveTraining={this.saveTraining} />\n        <ReactTable sortable={true} filterable={true} data={this.state.trainings} columns={columns}></ReactTable>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n          message={this.state.message}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TrainingList;"]},"metadata":{},"sourceType":"module"}