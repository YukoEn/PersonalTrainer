{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/DateContentRow.js\";\nimport cn from 'classnames';\nimport getHeight from 'dom-helpers/query/height';\nimport qsa from 'dom-helpers/query/querySelectorAll';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport dates from './utils/dates';\nimport { accessor, elementType } from './utils/propTypes';\nimport { segStyle, eventSegments, endOfRange, eventLevels } from './utils/eventLevels';\nimport BackgroundCells from './BackgroundCells';\nimport EventRow from './EventRow';\nimport EventEndingRow from './EventEndingRow';\n\nvar isSegmentInSlot = function isSegmentInSlot(seg, slot) {\n  return seg.left <= slot && seg.right >= slot;\n};\n\nvar propTypes = {\n  date: PropTypes.instanceOf(Date),\n  events: PropTypes.array.isRequired,\n  range: PropTypes.array.isRequired,\n  rtl: PropTypes.bool,\n  renderForMeasure: PropTypes.bool,\n  renderHeader: PropTypes.func,\n  container: PropTypes.func,\n  selected: PropTypes.object,\n  selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: PropTypes.number,\n  onShowMore: PropTypes.func,\n  onSelectSlot: PropTypes.func,\n  onSelectEnd: PropTypes.func,\n  onSelectStart: PropTypes.func,\n  now: PropTypes.instanceOf(Date).isRequired,\n  startAccessor: accessor.isRequired,\n  endAccessor: accessor.isRequired,\n  dateCellWrapper: elementType,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType.isRequired,\n  minRows: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  minRows: 0,\n  maxRows: Infinity\n};\n\nvar DateContentRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DateContentRow, _React$Component);\n\n  function DateContentRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DateContentRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateContentRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSelectSlot = function (slot) {\n      var _this$props = _this.props,\n          range = _this$props.range,\n          onSelectSlot = _this$props.onSelectSlot;\n      onSelectSlot(range.slice(slot.start, slot.end + 1), slot);\n    };\n\n    _this.handleShowMore = function (slot) {\n      var _this$props2 = _this.props,\n          range = _this$props2.range,\n          onShowMore = _this$props2.onShowMore;\n      var row = qsa(findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))), '.rbc-row-bg')[0];\n      var cell;\n      if (row) cell = row.children[slot - 1];\n\n      var events = _this.segments.filter(function (seg) {\n        return isSegmentInSlot(seg, slot);\n      }).map(function (seg) {\n        return seg.event;\n      });\n\n      onShowMore(events, range[slot - 1], cell, slot);\n    };\n\n    _this.createHeadingRef = function (r) {\n      _this.headingRow = r;\n    };\n\n    _this.createEventRef = function (r) {\n      _this.eventRow = r;\n    };\n\n    _this.getContainer = function () {\n      var container = _this.props.container;\n      return container ? container() : findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n    };\n\n    _this.renderHeadingCell = function (date, index) {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          range = _this$props3.range;\n      return renderHeader({\n        date: date,\n        key: \"header_\".concat(index),\n        style: segStyle(1, range.length),\n        className: cn('rbc-date-cell', dates.eq(date, _this.props.now, 'day') && 'rbc-now' // FIXME use props.now\n        )\n      });\n    };\n\n    _this.renderDummy = function () {\n      var _this$props4 = _this.props,\n          className = _this$props4.className,\n          range = _this$props4.range,\n          renderHeader = _this$props4.renderHeader;\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-row-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, renderHeader && React.createElement(\"div\", {\n        className: \"rbc-row\",\n        ref: _this.createHeadingRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, range.map(_this.renderHeadingCell)), React.createElement(\"div\", {\n        className: \"rbc-row\",\n        ref: _this.createEventRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-row-segment\",\n        style: segStyle(1, range.length),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-event-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"\\xA0\"))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(DateContentRow, [{\n    key: \"getRowLimit\",\n    value: function getRowLimit() {\n      var eventHeight = getHeight(this.eventRow);\n      var headingHeight = this.headingRow ? getHeight(this.headingRow) : 0;\n      var eventSpace = getHeight(findDOMNode(this)) - headingHeight;\n      return Math.max(Math.floor(eventSpace / eventHeight), 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          date = _this$props5.date,\n          rtl = _this$props5.rtl,\n          events = _this$props5.events,\n          range = _this$props5.range,\n          className = _this$props5.className,\n          selectable = _this$props5.selectable,\n          renderForMeasure = _this$props5.renderForMeasure,\n          startAccessor = _this$props5.startAccessor,\n          endAccessor = _this$props5.endAccessor,\n          renderHeader = _this$props5.renderHeader,\n          minRows = _this$props5.minRows,\n          maxRows = _this$props5.maxRows,\n          dateCellWrapper = _this$props5.dateCellWrapper,\n          eventComponent = _this$props5.eventComponent,\n          eventWrapperComponent = _this$props5.eventWrapperComponent,\n          onSelectStart = _this$props5.onSelectStart,\n          onSelectEnd = _this$props5.onSelectEnd,\n          longPressThreshold = _this$props5.longPressThreshold,\n          props = _objectWithoutProperties(_this$props5, [\"date\", \"rtl\", \"events\", \"range\", \"className\", \"selectable\", \"renderForMeasure\", \"startAccessor\", \"endAccessor\", \"renderHeader\", \"minRows\", \"maxRows\", \"dateCellWrapper\", \"eventComponent\", \"eventWrapperComponent\", \"onSelectStart\", \"onSelectEnd\", \"longPressThreshold\"]);\n\n      if (renderForMeasure) return this.renderDummy();\n\n      var _endOfRange = endOfRange(range),\n          first = _endOfRange.first,\n          last = _endOfRange.last;\n\n      var segments = this.segments = events.map(function (evt) {\n        return eventSegments(evt, first, last, {\n          startAccessor: startAccessor,\n          endAccessor: endAccessor\n        }, range);\n      });\n\n      var _eventLevels = eventLevels(segments, Math.max(maxRows - 1, 1)),\n          levels = _eventLevels.levels,\n          extra = _eventLevels.extra;\n\n      while (levels.length < minRows) {\n        levels.push([]);\n      }\n\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(BackgroundCells, {\n        date: date,\n        rtl: rtl,\n        range: range,\n        selectable: selectable,\n        container: this.getContainer,\n        onSelectStart: onSelectStart,\n        onSelectEnd: onSelectEnd,\n        onSelectSlot: this.handleSelectSlot,\n        cellWrapperComponent: dateCellWrapper,\n        longPressThreshold: longPressThreshold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rbc-row-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, renderHeader && React.createElement(\"div\", {\n        className: \"rbc-row\",\n        ref: this.createHeadingRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, range.map(this.renderHeadingCell)), levels.map(function (segs, idx) {\n        return React.createElement(EventRow, Object.assign({}, props, {\n          key: idx,\n          start: first,\n          end: last,\n          segments: segs,\n          slots: range.length,\n          eventComponent: eventComponent,\n          eventWrapperComponent: eventWrapperComponent,\n          startAccessor: startAccessor,\n          endAccessor: endAccessor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }));\n      }), !!extra.length && React.createElement(EventEndingRow, Object.assign({}, props, {\n        start: first,\n        end: last,\n        segments: extra,\n        onShowMore: this.handleShowMore,\n        eventComponent: eventComponent,\n        eventWrapperComponent: eventWrapperComponent,\n        startAccessor: startAccessor,\n        endAccessor: endAccessor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DateContentRow;\n}(React.Component);\n\nDateContentRow.propTypes = propTypes;\nDateContentRow.defaultProps = defaultProps;\nexport default DateContentRow;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/DateContentRow.js"],"names":["cn","getHeight","qsa","PropTypes","React","findDOMNode","dates","accessor","elementType","segStyle","eventSegments","endOfRange","eventLevels","BackgroundCells","EventRow","EventEndingRow","isSegmentInSlot","seg","slot","left","right","propTypes","date","instanceOf","Date","events","array","isRequired","range","rtl","bool","renderForMeasure","renderHeader","func","container","selected","object","selectable","oneOf","longPressThreshold","number","onShowMore","onSelectSlot","onSelectEnd","onSelectStart","now","startAccessor","endAccessor","dateCellWrapper","eventComponent","eventWrapperComponent","minRows","maxRows","defaultProps","Infinity","DateContentRow","args","handleSelectSlot","props","slice","start","end","handleShowMore","row","cell","children","segments","filter","map","event","createHeadingRef","r","headingRow","createEventRef","eventRow","getContainer","renderHeadingCell","index","key","style","length","className","eq","renderDummy","eventHeight","headingHeight","eventSpace","Math","max","floor","first","last","evt","levels","extra","push","segs","idx","Component"],"mappings":"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","sourcesContent":["import cn from 'classnames';\nimport getHeight from 'dom-helpers/query/height';\nimport qsa from 'dom-helpers/query/querySelectorAll';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport dates from './utils/dates';\nimport { accessor, elementType } from './utils/propTypes';\nimport { segStyle, eventSegments, endOfRange, eventLevels } from './utils/eventLevels';\nimport BackgroundCells from './BackgroundCells';\nimport EventRow from './EventRow';\nimport EventEndingRow from './EventEndingRow';\n\nlet isSegmentInSlot = (seg, slot) => seg.left <= slot && seg.right >= slot;\n\nconst propTypes = {\n  date: PropTypes.instanceOf(Date),\n  events: PropTypes.array.isRequired,\n  range: PropTypes.array.isRequired,\n\n  rtl: PropTypes.bool,\n  renderForMeasure: PropTypes.bool,\n  renderHeader: PropTypes.func,\n\n  container: PropTypes.func,\n  selected: PropTypes.object,\n  selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: PropTypes.number,\n\n  onShowMore: PropTypes.func,\n  onSelectSlot: PropTypes.func,\n  onSelectEnd: PropTypes.func,\n  onSelectStart: PropTypes.func,\n\n  now: PropTypes.instanceOf(Date).isRequired,\n  startAccessor: accessor.isRequired,\n  endAccessor: accessor.isRequired,\n\n  dateCellWrapper: elementType,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType.isRequired,\n  minRows: PropTypes.number.isRequired,\n  maxRows: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  minRows: 0,\n  maxRows: Infinity,\n}\n\nclass DateContentRow extends React.Component {\n\n  constructor(...args) {\n    super(...args);\n  }\n\n  handleSelectSlot = (slot) => {\n    const { range, onSelectSlot } = this.props;\n\n    onSelectSlot(\n      range.slice(slot.start, slot.end + 1),\n      slot,\n    )\n  }\n\n  handleShowMore = (slot) => {\n    const { range, onShowMore } = this.props;\n    let row = qsa(findDOMNode(this), '.rbc-row-bg')[0]\n\n    let cell;\n    if (row) cell = row.children[slot-1]\n\n    let events = this.segments\n      .filter(seg => isSegmentInSlot(seg, slot))\n      .map(seg => seg.event)\n\n    onShowMore(events, range[slot-1], cell, slot)\n  }\n\n  createHeadingRef = r => {\n    this.headingRow = r;\n  }\n\n  createEventRef = r => {\n    this.eventRow = r;\n  }\n\n  getContainer = () => {\n    const { container } = this.props;\n    return container ? container() : findDOMNode(this)\n  }\n\n  getRowLimit() {\n    let eventHeight = getHeight(this.eventRow);\n    let headingHeight = this.headingRow ? getHeight(this.headingRow) : 0\n    let eventSpace = getHeight(findDOMNode(this)) - headingHeight;\n\n    return Math.max(Math.floor(eventSpace / eventHeight), 1)\n  }\n\n  renderHeadingCell = (date, index) => {\n    let { renderHeader, range } = this.props;\n\n    return renderHeader({\n      date,\n      key: `header_${index}`,\n      style: segStyle(1, range.length),\n      className: cn(\n        'rbc-date-cell',\n        dates.eq(date, this.props.now, 'day') && 'rbc-now', // FIXME use props.now\n      )\n    })\n  }\n\n  renderDummy = () => {\n    let { className, range, renderHeader } = this.props;\n    return (\n      <div className={className}>\n        <div className='rbc-row-content'>\n          {renderHeader && (\n            <div className='rbc-row' ref={this.createHeadingRef}>\n              {range.map(this.renderHeadingCell)}\n            </div>\n          )}\n          <div className='rbc-row' ref={this.createEventRef}>\n            <div className='rbc-row-segment' style={segStyle(1, range.length)}>\n              <div className='rbc-event'>\n                <div className='rbc-event-content'>&nbsp;</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const {\n      date,\n      rtl,\n      events,\n      range,\n      className,\n      selectable,\n      renderForMeasure,\n      startAccessor,\n      endAccessor,\n      renderHeader,\n      minRows, maxRows,\n      dateCellWrapper,\n      eventComponent,\n      eventWrapperComponent,\n      onSelectStart,\n      onSelectEnd,\n      longPressThreshold,\n      ...props\n    } = this.props;\n\n    if (renderForMeasure)\n      return this.renderDummy();\n\n    let { first, last } = endOfRange(range);\n\n    let segments = this.segments = events.map(evt => eventSegments(evt, first, last, {\n      startAccessor,\n      endAccessor\n    }, range))\n\n    let { levels, extra } = eventLevels(segments, Math.max(maxRows - 1, 1));\n    while (levels.length < minRows ) levels.push([])\n\n    return (\n      <div className={className}>\n        <BackgroundCells\n          date={date}\n          rtl={rtl}\n          range={range}\n          selectable={selectable}\n          container={this.getContainer}\n          onSelectStart={onSelectStart}\n          onSelectEnd={onSelectEnd}\n          onSelectSlot={this.handleSelectSlot}\n          cellWrapperComponent={dateCellWrapper}\n          longPressThreshold={longPressThreshold}\n        />\n\n        <div className='rbc-row-content'>\n          {renderHeader && (\n            <div className='rbc-row' ref={this.createHeadingRef}>\n              {range.map(this.renderHeadingCell)}\n            </div>\n          )}\n          {levels.map((segs, idx) =>\n            <EventRow\n              {...props}\n              key={idx}\n              start={first}\n              end={last}\n              segments={segs}\n              slots={range.length}\n              eventComponent={eventComponent}\n              eventWrapperComponent={eventWrapperComponent}\n              startAccessor={startAccessor}\n              endAccessor={endAccessor}\n            />\n          )}\n          {!!extra.length && (\n            <EventEndingRow\n              {...props}\n              start={first}\n              end={last}\n              segments={extra}\n              onShowMore={this.handleShowMore}\n              eventComponent={eventComponent}\n              eventWrapperComponent={eventWrapperComponent}\n              startAccessor={startAccessor}\n              endAccessor={endAccessor}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nDateContentRow.propTypes = propTypes;\nDateContentRow.defaultProps = defaultProps;\n\nexport default DateContentRow\n"]},"metadata":{},"sourceType":"module"}