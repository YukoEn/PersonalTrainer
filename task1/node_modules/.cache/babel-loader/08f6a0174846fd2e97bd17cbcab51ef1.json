{"ast":null,"code":"import _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/TimeColumn.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cn from 'classnames';\nimport dates from './utils/dates';\nimport { elementType, dateFormat } from './utils/propTypes';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport TimeSlotGroup from './TimeSlotGroup';\n\nvar TimeColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimeColumn, _Component);\n\n  function TimeColumn() {\n    _classCallCheck(this, TimeColumn);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TimeColumn).apply(this, arguments));\n  }\n\n  _createClass(TimeColumn, [{\n    key: \"renderTimeSliceGroup\",\n    value: function renderTimeSliceGroup(key, isNow, date) {\n      var _this$props = this.props,\n          dayWrapperComponent = _this$props.dayWrapperComponent,\n          timeslots = _this$props.timeslots,\n          showLabels = _this$props.showLabels,\n          step = _this$props.step,\n          slotPropGetter = _this$props.slotPropGetter,\n          timeGutterFormat = _this$props.timeGutterFormat,\n          culture = _this$props.culture;\n      return React.createElement(TimeSlotGroup, {\n        key: key,\n        isNow: isNow,\n        value: date,\n        step: step,\n        slotPropGetter: slotPropGetter,\n        culture: culture,\n        timeslots: timeslots,\n        showLabels: showLabels,\n        timeGutterFormat: timeGutterFormat,\n        dayWrapperComponent: dayWrapperComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          now = _this$props2.now,\n          min = _this$props2.min,\n          max = _this$props2.max,\n          step = _this$props2.step,\n          timeslots = _this$props2.timeslots;\n      var totalMin = dates.diff(min, max, 'minutes');\n      var numGroups = Math.ceil(totalMin / (step * timeslots));\n      var renderedSlots = [];\n      var groupLengthInMinutes = step * timeslots;\n      var date = min;\n      var next = date;\n      var isNow = false;\n\n      for (var i = 0; i < numGroups; i++) {\n        isNow = dates.inRange(now, date, dates.add(next, groupLengthInMinutes - 1, 'minutes'), 'minutes');\n        next = dates.add(date, groupLengthInMinutes, 'minutes');\n        renderedSlots.push(this.renderTimeSliceGroup(i, isNow, date));\n        date = next;\n      }\n\n      return React.createElement(\"div\", {\n        className: cn(className, 'rbc-time-column'),\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, renderedSlots, children);\n    }\n  }]);\n\n  return TimeColumn;\n}(Component);\n\nTimeColumn.propTypes = {\n  step: PropTypes.number.isRequired,\n  culture: PropTypes.string,\n  timeslots: PropTypes.number.isRequired,\n  now: PropTypes.instanceOf(Date).isRequired,\n  min: PropTypes.instanceOf(Date).isRequired,\n  max: PropTypes.instanceOf(Date).isRequired,\n  showLabels: PropTypes.bool,\n  timeGutterFormat: dateFormat,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  slotPropGetter: PropTypes.func,\n  dayWrapperComponent: elementType\n};\nTimeColumn.defaultProps = {\n  step: 30,\n  timeslots: 2,\n  showLabels: false,\n  type: 'day',\n  className: '',\n  dayWrapperComponent: BackgroundWrapper\n};\nexport { TimeColumn as default };","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/TimeColumn.js"],"names":["PropTypes","React","Component","cn","dates","elementType","dateFormat","BackgroundWrapper","TimeSlotGroup","TimeColumn","key","isNow","date","props","dayWrapperComponent","timeslots","showLabels","step","slotPropGetter","timeGutterFormat","culture","className","children","style","now","min","max","totalMin","diff","numGroups","Math","ceil","renderedSlots","groupLengthInMinutes","next","i","inRange","add","push","renderTimeSliceGroup","propTypes","number","isRequired","string","instanceOf","Date","bool","type","func","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cn from 'classnames';\n\nimport dates from './utils/dates';\nimport { elementType, dateFormat } from './utils/propTypes';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport TimeSlotGroup from './TimeSlotGroup'\n\nexport default class TimeColumn extends Component {\n  static propTypes = {\n    step: PropTypes.number.isRequired,\n    culture: PropTypes.string,\n    timeslots: PropTypes.number.isRequired,\n    now: PropTypes.instanceOf(Date).isRequired,\n    min: PropTypes.instanceOf(Date).isRequired,\n    max: PropTypes.instanceOf(Date).isRequired,\n    showLabels: PropTypes.bool,\n    timeGutterFormat: dateFormat,\n    type: PropTypes.string.isRequired,\n    className: PropTypes.string,\n\n    slotPropGetter: PropTypes.func,\n    dayWrapperComponent: elementType,\n  }\n  static defaultProps = {\n    step: 30,\n    timeslots: 2,\n    showLabels: false,\n    type: 'day',\n    className: '',\n    dayWrapperComponent: BackgroundWrapper,\n  }\n\n  renderTimeSliceGroup(key, isNow, date) {\n    const { dayWrapperComponent, timeslots, showLabels, step, slotPropGetter, timeGutterFormat, culture } = this.props;\n\n    return (\n      <TimeSlotGroup\n        key={key}\n        isNow={isNow}\n        value={date}\n        step={step}\n        slotPropGetter={slotPropGetter}\n        culture={culture}\n        timeslots={timeslots}\n        showLabels={showLabels}\n        timeGutterFormat={timeGutterFormat}\n        dayWrapperComponent={dayWrapperComponent}\n      />\n    )\n  }\n\n  render() {\n    const { className, children, style, now, min, max, step, timeslots } = this.props;\n    const totalMin = dates.diff(min, max, 'minutes')\n    const numGroups = Math.ceil(totalMin / (step * timeslots))\n    const renderedSlots = []\n    const groupLengthInMinutes = step * timeslots\n\n    let date = min\n    let next = date\n    let isNow = false\n\n    for (var i = 0; i < numGroups; i++) {\n      isNow = dates.inRange(\n          now\n        , date\n        , dates.add(next, groupLengthInMinutes - 1, 'minutes')\n        , 'minutes'\n      )\n\n      next = dates.add(date, groupLengthInMinutes, 'minutes');\n      renderedSlots.push(this.renderTimeSliceGroup(i, isNow, date))\n\n      date = next\n    }\n\n    return (\n      <div\n        className={cn(className, 'rbc-time-column')}\n        style={style}\n      >\n        {renderedSlots}\n        {children}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}