{"ast":null,"code":"import PropTypes from 'prop-types';\nimport localizer from '../localizer';\nimport elementType from 'react-prop-types/lib/elementType';\nimport all from 'react-prop-types/lib/all';\nimport { views as Views } from './constants';\nimport createChainableTypeChecker from 'react-prop-types/lib/utils/createChainableTypeChecker';\nexport { elementType }; // export contextShape = React.PropTypes.shape({\n//   formats: React.PropTypes.object.isRequired,\n//   messages: React.PropTypes.object.isRequired,\n//   accessors: React.PropTypes.shape({\n//     titleAccessor: accessor,\n//     startAccessor: accessor,\n//     endAccessor: accessor,\n//     allDayAccessor: accessor,\n//   }).isRequired,\n// }).isRequired,\n\nexport var eventComponent = PropTypes.oneOfType([elementType, PropTypes.shape({\n  month: elementType,\n  week: elementType,\n  day: elementType,\n  agenda: elementType\n})]);\nvar viewNames = Object.keys(Views).map(function (k) {\n  return Views[k];\n});\nexport var accessor = PropTypes.oneOfType([PropTypes.string, PropTypes.func]);\nexport var dateFormat = createChainableTypeChecker(function () {\n  return localizer.propType && localizer.propType.apply(localizer, arguments);\n});\nexport var dateRangeFormat = PropTypes.func;\n/**\n * accepts either an array of builtin view names:\n *\n * ```\n * views={['month', 'day', 'agenda']}\n * ```\n *\n * or an object hash of the view name and the component (or boolean for builtin)\n *\n * ```\n * views={{\n *   month: true,\n *   week: false,\n *   workweek: WorkWeekViewComponent,\n * }}\n * ```\n */\n\nexport var views = PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(viewNames)), all(PropTypes.object, function (props, name) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var prop = props[name],\n      err;\n  Object.keys(prop).every(function (key) {\n    var isBuiltinView = viewNames.indexOf(key) !== -1 && typeof prop[key] === 'boolean';\n    return isBuiltinView || !(err = elementType.apply(void 0, [prop, key].concat(args)));\n  });\n  return err || null;\n})]);","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/utils/propTypes.js"],"names":["PropTypes","localizer","elementType","all","views","Views","createChainableTypeChecker","eventComponent","oneOfType","shape","month","week","day","agenda","viewNames","Object","keys","map","k","accessor","string","func","dateFormat","propType","dateRangeFormat","arrayOf","oneOf","object","props","name","args","prop","err","every","key","isBuiltinView","indexOf"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SAASC,KAAK,IAAIC,KAAlB,QAA+B,aAA/B;AAEA,OAAOC,0BAAP,MAAuC,uDAAvC;AAEA,SAASJ,WAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIK,cAAc,GAAGP,SAAS,CAACQ,SAAV,CAAoB,CAC9CN,WAD8C,EAE9CF,SAAS,CAACS,KAAV,CAAgB;AACdC,EAAAA,KAAK,EAAER,WADO;AAEdS,EAAAA,IAAI,EAAET,WAFQ;AAGdU,EAAAA,GAAG,EAAEV,WAHS;AAIdW,EAAAA,MAAM,EAAEX;AAJM,CAAhB,CAF8C,CAApB,CAArB;AAWP,IAAIY,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYX,KAAZ,EAAmBY,GAAnB,CAAuB,UAAAC,CAAC;AAAA,SAAIb,KAAK,CAACa,CAAD,CAAT;AAAA,CAAxB,CAAhB;AAEA,OAAO,IAAIC,QAAQ,GAAGnB,SAAS,CAACQ,SAAV,CAAoB,CACxCR,SAAS,CAACoB,MAD8B,EAExCpB,SAAS,CAACqB,IAF8B,CAApB,CAAf;AAKP,OAAO,IAAIC,UAAU,GAAGhB,0BAA0B,CAC9C;AAAA,SAAaL,SAAS,CAACsB,QAAV,IAAsBtB,SAAS,CAACsB,QAAV,OAAAtB,SAAS,YAA5C;AAAA,CAD8C,CAA3C;AAGP,OAAO,IAAIuB,eAAe,GAAGxB,SAAS,CAACqB,IAAhC;AAEP;;;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAIjB,KAAK,GAAGJ,SAAS,CAACQ,SAAV,CAAoB,CACrCR,SAAS,CAACyB,OAAV,CACEzB,SAAS,CAAC0B,KAAV,CAAgBZ,SAAhB,CADF,CADqC,EAIrCX,GAAG,CACDH,SAAS,CAAC2B,MADT,EAED,UAACC,KAAD,EAAQC,IAAR,EAAwB;AAAA,oCAAPC,IAAO;AAAPA,IAAAA,IAAO;AAAA;;AACtB,MAAIC,IAAI,GAAGH,KAAK,CAACC,IAAD,CAAhB;AAAA,MACIG,GADJ;AAGAjB,EAAAA,MAAM,CAACC,IAAP,CAAYe,IAAZ,EAAkBE,KAAlB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,QAAIC,aAAa,GACfrB,SAAS,CAACsB,OAAV,CAAkBF,GAAlB,MAA2B,CAAC,CAA5B,IACA,OAAOH,IAAI,CAACG,GAAD,CAAX,KAAqB,SAFvB;AAIA,WAAOC,aAAa,IAAI,EAAEH,GAAG,GAAG9B,WAAW,MAAX,UAAY6B,IAAZ,EAAkBG,GAAlB,SAA0BJ,IAA1B,EAAR,CAAxB;AACD,GAND;AAQA,SAAOE,GAAG,IAAI,IAAd;AACD,CAfA,CAJkC,CAApB,CAAZ","sourcesContent":["import PropTypes from 'prop-types';\nimport localizer from '../localizer';\nimport elementType from 'react-prop-types/lib/elementType';\nimport all from 'react-prop-types/lib/all';\nimport { views as Views } from './constants';\n\nimport createChainableTypeChecker from 'react-prop-types/lib/utils/createChainableTypeChecker';\n\nexport { elementType }\n\n// export contextShape = React.PropTypes.shape({\n//   formats: React.PropTypes.object.isRequired,\n//   messages: React.PropTypes.object.isRequired,\n//   accessors: React.PropTypes.shape({\n//     titleAccessor: accessor,\n//     startAccessor: accessor,\n//     endAccessor: accessor,\n//     allDayAccessor: accessor,\n//   }).isRequired,\n// }).isRequired,\n\nexport let eventComponent = PropTypes.oneOfType([\n  elementType,\n  PropTypes.shape({\n    month: elementType,\n    week: elementType,\n    day: elementType,\n    agenda: elementType\n  })\n])\n\n\nlet viewNames = Object.keys(Views).map(k => Views[k])\n\nexport let accessor = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.func\n])\n\nexport let dateFormat = createChainableTypeChecker(\n    (...args) => localizer.propType && localizer.propType(...args))\n\nexport let dateRangeFormat = PropTypes.func\n\n/**\n * accepts either an array of builtin view names:\n *\n * ```\n * views={['month', 'day', 'agenda']}\n * ```\n *\n * or an object hash of the view name and the component (or boolean for builtin)\n *\n * ```\n * views={{\n *   month: true,\n *   week: false,\n *   workweek: WorkWeekViewComponent,\n * }}\n * ```\n */\nexport let views = PropTypes.oneOfType([\n  PropTypes.arrayOf(\n    PropTypes.oneOf(viewNames)\n  ),\n  all(\n    PropTypes.object,\n    (props, name, ...args)=>{\n      let prop = props[name]\n        , err;\n\n      Object.keys(prop).every(key => {\n        let isBuiltinView =\n          viewNames.indexOf(key) !== -1 &&\n          typeof prop[key] === 'boolean';\n\n        return isBuiltinView || !(err = elementType(prop, key, ...args))\n      })\n\n      return err || null\n    }\n  )\n])\n"]},"metadata":{},"sourceType":"module"}