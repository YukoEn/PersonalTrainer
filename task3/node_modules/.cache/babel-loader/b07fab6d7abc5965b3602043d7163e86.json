{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/DayColumn.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport Selection, { getBoundsForNode, isEvent } from './Selection';\nimport dates from './utils/dates';\nimport { isSelected } from './utils/selection';\nimport localizer from './localizer';\nimport { notify } from './utils/helpers';\nimport { accessor, elementType, dateFormat } from './utils/propTypes';\nimport { accessor as get } from './utils/accessors';\nimport getStyledEvents, { positionFromDate, startsBefore } from './utils/dayViewLayout';\nimport TimeColumn from './TimeColumn';\n\nfunction snapToSlot(date, step) {\n  var roundTo = 1000 * 60 * step;\n  return new Date(Math.floor(date.getTime() / roundTo) * roundTo);\n}\n\nfunction startsAfter(date, max) {\n  return dates.gt(dates.merge(max, date), max, 'minutes');\n}\n\nvar DayColumn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DayColumn, _React$Component);\n\n  function DayColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DayColumn);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DayColumn)).call.apply(_getPrototypeOf2, [this].concat(_args)));\n    _this.state = {\n      selecting: false\n    };\n\n    _this.renderEvents = function () {\n      var _this$props = _this.props,\n          events = _this$props.events,\n          min = _this$props.min,\n          max = _this$props.max,\n          showMultiDayTimes = _this$props.showMultiDayTimes,\n          culture = _this$props.culture,\n          eventPropGetter = _this$props.eventPropGetter,\n          selected = _this$props.selected,\n          messages = _this$props.messages,\n          eventComponent = _this$props.eventComponent,\n          eventTimeRangeFormat = _this$props.eventTimeRangeFormat,\n          eventTimeRangeStartFormat = _this$props.eventTimeRangeStartFormat,\n          eventTimeRangeEndFormat = _this$props.eventTimeRangeEndFormat,\n          EventWrapper = _this$props.eventWrapperComponent,\n          isRtl = _this$props.rtl,\n          step = _this$props.step,\n          timeslots = _this$props.timeslots,\n          startAccessor = _this$props.startAccessor,\n          endAccessor = _this$props.endAccessor,\n          titleAccessor = _this$props.titleAccessor;\n      var EventComponent = eventComponent;\n      var styledEvents = getStyledEvents({\n        events: events,\n        startAccessor: startAccessor,\n        endAccessor: endAccessor,\n        min: min,\n        showMultiDayTimes: showMultiDayTimes,\n        totalMin: _this._totalMin,\n        step: step,\n        timeslots: timeslots\n      });\n      return styledEvents.map(function (_ref, idx) {\n        var _objectSpread2;\n\n        var event = _ref.event,\n            style = _ref.style;\n        var _eventTimeRangeFormat = eventTimeRangeFormat;\n        var _continuesPrior = false;\n        var _continuesAfter = false;\n        var start = get(event, startAccessor);\n        var end = get(event, endAccessor);\n\n        if (start < min) {\n          start = min;\n          _continuesPrior = true;\n          _eventTimeRangeFormat = eventTimeRangeEndFormat;\n        }\n\n        if (end > max) {\n          end = max;\n          _continuesAfter = true;\n          _eventTimeRangeFormat = eventTimeRangeStartFormat;\n        }\n\n        var continuesPrior = startsBefore(start, min);\n        var continuesAfter = startsAfter(end, max);\n        var title = get(event, titleAccessor);\n        var label;\n\n        if (_continuesPrior && _continuesAfter) {\n          label = messages.allDay;\n        } else {\n          label = localizer.format({\n            start: start,\n            end: end\n          }, _eventTimeRangeFormat, culture);\n        }\n\n        var _isSelected = isSelected(event, selected);\n\n        if (eventPropGetter) var _eventPropGetter = eventPropGetter(event, start, end, _isSelected),\n            xStyle = _eventPropGetter.style,\n            className = _eventPropGetter.className; // edited by onursimsek94\n\n        if (event.bgColor) // added\n          var bgColorStyle = {\n            backgroundColor: event.bgColor // added\n\n          };\n        var height = style.height,\n            top = style.top,\n            width = style.width,\n            xOffset = style.xOffset;\n        return React.createElement(EventWrapper, {\n          event: event,\n          key: 'evt_' + idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: _objectSpread({}, xStyle, (_objectSpread2 = {\n            top: \"\".concat(top, \"%\"),\n            height: \"\".concat(height, \"%\")\n          }, _defineProperty(_objectSpread2, isRtl ? 'right' : 'left', \"\".concat(Math.max(0, xOffset), \"%\")), _defineProperty(_objectSpread2, \"width\", \"\".concat(width, \"%\")), _objectSpread2), bgColorStyle),\n          title: (typeof label === 'string' ? label + ': ' : '') + title,\n          onClick: function onClick(e) {\n            return _this._select(event, e);\n          },\n          onDoubleClick: function onDoubleClick(e) {\n            return _this._doubleClick(event, e);\n          },\n          className: cn('rbc-event', className, {\n            'rbc-selected': _isSelected,\n            'rbc-event-continues-earlier': continuesPrior,\n            'rbc-event-continues-later': continuesAfter,\n            'rbc-event-continues-day-prior': _continuesPrior,\n            'rbc-event-continues-day-after': _continuesAfter\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"rbc-event-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, label), React.createElement(\"div\", {\n          className: \"rbc-event-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, EventComponent ? React.createElement(EventComponent, {\n          event: event,\n          title: title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }) : title)));\n      });\n    };\n\n    _this._slotStyle = function (startSlot, endSlot) {\n      var top = startSlot / _this._totalMin * 100;\n      var bottom = endSlot / _this._totalMin * 100;\n      return {\n        top: top + '%',\n        height: bottom - top + '%'\n      };\n    };\n\n    _this._selectable = function () {\n      var node = findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      var selector = _this._selector = new Selection(function () {\n        return findDOMNode(_assertThisInitialized(_assertThisInitialized(_this)));\n      }, {\n        longPressThreshold: _this.props.longPressThreshold\n      });\n\n      var maybeSelect = function maybeSelect(box) {\n        var onSelecting = _this.props.onSelecting;\n        var current = _this.state || {};\n        var state = selectionState(box);\n        var start = state.startDate,\n            end = state.endDate;\n\n        if (onSelecting) {\n          if (dates.eq(current.startDate, start, 'minutes') && dates.eq(current.endDate, end, 'minutes') || onSelecting({\n            start: start,\n            end: end\n          }) === false) return;\n        }\n\n        _this.setState(state);\n      };\n\n      var selectionState = function selectionState(_ref2) {\n        var y = _ref2.y;\n        var _this$props2 = _this.props,\n            step = _this$props2.step,\n            min = _this$props2.min,\n            max = _this$props2.max;\n\n        var _getBoundsForNode = getBoundsForNode(node),\n            top = _getBoundsForNode.top,\n            bottom = _getBoundsForNode.bottom;\n\n        var mins = _this._totalMin;\n        var range = Math.abs(top - bottom);\n        var current = (y - top) / range;\n        current = snapToSlot(minToDate(mins * current, min), step);\n        if (!_this.state.selecting) _this._initialDateSlot = current;\n        var initial = _this._initialDateSlot;\n        if (dates.eq(initial, current, 'minutes')) current = dates.add(current, step, 'minutes');\n        var start = dates.max(min, dates.min(initial, current));\n        var end = dates.min(max, dates.max(initial, current));\n        return {\n          selecting: true,\n          startDate: start,\n          endDate: end,\n          startSlot: positionFromDate(start, min, _this._totalMin),\n          endSlot: positionFromDate(end, min, _this._totalMin)\n        };\n      };\n\n      var selectorClicksHandler = function selectorClicksHandler(box, actionType) {\n        if (!isEvent(findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))), box)) _this._selectSlot(_objectSpread({}, selectionState(box), {\n          action: actionType\n        }));\n\n        _this.setState({\n          selecting: false\n        });\n      };\n\n      selector.on('selecting', maybeSelect);\n      selector.on('selectStart', maybeSelect);\n      selector.on('beforeSelect', function (box) {\n        if (_this.props.selectable !== 'ignoreEvents') return;\n        return !isEvent(findDOMNode(_assertThisInitialized(_assertThisInitialized(_this))), box);\n      });\n      selector.on('click', function (box) {\n        return selectorClicksHandler(box, 'click');\n      });\n      selector.on('doubleClick', function (box) {\n        return selectorClicksHandler(box, 'doubleClick');\n      });\n      selector.on('select', function () {\n        if (_this.state.selecting) {\n          _this._selectSlot(_objectSpread({}, _this.state, {\n            action: 'select'\n          }));\n\n          _this.setState({\n            selecting: false\n          });\n        }\n      });\n    };\n\n    _this._teardownSelectable = function () {\n      if (!_this._selector) return;\n\n      _this._selector.teardown();\n\n      _this._selector = null;\n    };\n\n    _this._selectSlot = function (_ref3) {\n      var startDate = _ref3.startDate,\n          endDate = _ref3.endDate,\n          action = _ref3.action;\n      var current = startDate,\n          slots = [];\n\n      while (dates.lte(current, endDate)) {\n        slots.push(current);\n        current = dates.add(current, _this.props.step, 'minutes');\n      }\n\n      notify(_this.props.onSelectSlot, {\n        slots: slots,\n        start: startDate,\n        end: endDate,\n        action: action\n      });\n    };\n\n    _this._select = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      notify(_this.props.onSelectEvent, args);\n    };\n\n    _this._doubleClick = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      notify(_this.props.onDoubleClickEvent, args);\n    };\n\n    return _this;\n  }\n\n  _createClass(DayColumn, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.selectable && this._selectable();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._teardownSelectable();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.selectable && !this.props.selectable) this._selectable();\n      if (!nextProps.selectable && this.props.selectable) this._teardownSelectable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          min = _this$props3.min,\n          max = _this$props3.max,\n          step = _this$props3.step,\n          now = _this$props3.now,\n          selectRangeFormat = _this$props3.selectRangeFormat,\n          culture = _this$props3.culture,\n          props = _objectWithoutProperties(_this$props3, [\"min\", \"max\", \"step\", \"now\", \"selectRangeFormat\", \"culture\"]);\n\n      this._totalMin = dates.diff(min, max, 'minutes');\n      var _this$state = this.state,\n          selecting = _this$state.selecting,\n          startSlot = _this$state.startSlot,\n          endSlot = _this$state.endSlot;\n\n      var style = this._slotStyle(startSlot, endSlot);\n\n      var selectDates = {\n        start: this.state.startDate,\n        end: this.state.endDate\n      };\n      return React.createElement(TimeColumn, Object.assign({}, props, {\n        className: cn('rbc-day-slot', dates.isToday(max) && 'rbc-today'),\n        now: now,\n        min: min,\n        max: max,\n        step: step,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), this.renderEvents(), selecting && React.createElement(\"div\", {\n        className: \"rbc-slot-selection\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, localizer.format(selectDates, selectRangeFormat, culture))));\n    }\n  }]);\n\n  return DayColumn;\n}(React.Component);\n\nDayColumn.propTypes = {\n  events: PropTypes.array.isRequired,\n  step: PropTypes.number.isRequired,\n  min: PropTypes.instanceOf(Date).isRequired,\n  max: PropTypes.instanceOf(Date).isRequired,\n  now: PropTypes.instanceOf(Date),\n  rtl: PropTypes.bool,\n  titleAccessor: accessor,\n  allDayAccessor: accessor.isRequired,\n  startAccessor: accessor.isRequired,\n  endAccessor: accessor.isRequired,\n  selectRangeFormat: dateFormat,\n  eventTimeRangeFormat: dateFormat,\n  eventTimeRangeStartFormat: dateFormat,\n  eventTimeRangeEndFormat: dateFormat,\n  showMultiDayTimes: PropTypes.bool,\n  culture: PropTypes.string,\n  timeslots: PropTypes.number,\n  messages: PropTypes.object,\n  selected: PropTypes.object,\n  selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n  eventOffset: PropTypes.number,\n  longPressThreshold: PropTypes.number,\n  onSelecting: PropTypes.func,\n  onSelectSlot: PropTypes.func.isRequired,\n  onSelectEvent: PropTypes.func.isRequired,\n  onDoubleClickEvent: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  dragThroughEvents: PropTypes.bool,\n  eventPropGetter: PropTypes.func,\n  dayWrapperComponent: elementType,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType.isRequired\n};\nDayColumn.defaultProps = {\n  dragThroughEvents: true,\n  timeslots: 2\n};\n\nfunction minToDate(min, date) {\n  var dt = new Date(date),\n      totalMins = dates.diff(dates.startOf(date, 'day'), date, 'minutes');\n  dt = dates.hours(dt, 0);\n  dt = dates.minutes(dt, totalMins + min);\n  dt = dates.seconds(dt, 0);\n  return dates.milliseconds(dt, 0);\n}\n\nexport default DayColumn;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/DayColumn.js"],"names":["PropTypes","React","findDOMNode","cn","Selection","getBoundsForNode","isEvent","dates","isSelected","localizer","notify","accessor","elementType","dateFormat","get","getStyledEvents","positionFromDate","startsBefore","TimeColumn","snapToSlot","date","step","roundTo","Date","Math","floor","getTime","startsAfter","max","gt","merge","DayColumn","state","selecting","renderEvents","props","events","min","showMultiDayTimes","culture","eventPropGetter","selected","messages","eventComponent","eventTimeRangeFormat","eventTimeRangeStartFormat","eventTimeRangeEndFormat","EventWrapper","eventWrapperComponent","isRtl","rtl","timeslots","startAccessor","endAccessor","titleAccessor","EventComponent","styledEvents","totalMin","_totalMin","map","idx","event","style","_eventTimeRangeFormat","_continuesPrior","_continuesAfter","start","end","continuesPrior","continuesAfter","title","label","allDay","format","_isSelected","xStyle","className","bgColor","bgColorStyle","backgroundColor","height","top","width","xOffset","e","_select","_doubleClick","_slotStyle","startSlot","endSlot","bottom","_selectable","node","selector","_selector","longPressThreshold","maybeSelect","box","onSelecting","current","selectionState","startDate","endDate","eq","setState","y","mins","range","abs","minToDate","_initialDateSlot","initial","add","selectorClicksHandler","actionType","_selectSlot","action","on","selectable","_teardownSelectable","teardown","slots","lte","push","onSelectSlot","args","onSelectEvent","onDoubleClickEvent","nextProps","now","selectRangeFormat","diff","selectDates","isToday","Component","propTypes","array","isRequired","number","instanceOf","bool","allDayAccessor","string","object","oneOf","eventOffset","func","dragThroughEvents","dayWrapperComponent","defaultProps","dt","totalMins","startOf","hours","minutes","seconds","milliseconds"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\n\nimport Selection, { getBoundsForNode, isEvent } from './Selection';\nimport dates from './utils/dates';\nimport { isSelected } from './utils/selection';\nimport localizer from './localizer'\n\nimport { notify } from './utils/helpers';\nimport { accessor, elementType, dateFormat } from './utils/propTypes';\nimport { accessor as get } from './utils/accessors';\n\nimport getStyledEvents, { positionFromDate, startsBefore } from './utils/dayViewLayout'\n\nimport TimeColumn from './TimeColumn'\n\nfunction snapToSlot(date, step){\n  var roundTo = 1000 * 60 * step;\n  return new Date(Math.floor(date.getTime() / roundTo) * roundTo)\n}\n\nfunction startsAfter(date, max) {\n  return dates.gt(dates.merge(max, date), max, 'minutes')\n}\n\nclass DayColumn extends React.Component {\n  static propTypes = {\n    events: PropTypes.array.isRequired,\n    step: PropTypes.number.isRequired,\n    min: PropTypes.instanceOf(Date).isRequired,\n    max: PropTypes.instanceOf(Date).isRequired,\n    now: PropTypes.instanceOf(Date),\n\n    rtl: PropTypes.bool,\n    titleAccessor: accessor,\n    allDayAccessor: accessor.isRequired,\n    startAccessor: accessor.isRequired,\n    endAccessor: accessor.isRequired,\n\n    selectRangeFormat: dateFormat,\n    eventTimeRangeFormat: dateFormat,\n    eventTimeRangeStartFormat: dateFormat,\n    eventTimeRangeEndFormat: dateFormat,\n    showMultiDayTimes: PropTypes.bool,\n    culture: PropTypes.string,\n    timeslots: PropTypes.number,\n    messages: PropTypes.object,\n\n    selected: PropTypes.object,\n    selectable: PropTypes.oneOf([true, false, 'ignoreEvents']),\n    eventOffset: PropTypes.number,\n    longPressThreshold: PropTypes.number,\n\n    onSelecting: PropTypes.func,\n    onSelectSlot: PropTypes.func.isRequired,\n    onSelectEvent: PropTypes.func.isRequired,\n    onDoubleClickEvent: PropTypes.func.isRequired,\n\n    className: PropTypes.string,\n    dragThroughEvents: PropTypes.bool,\n    eventPropGetter: PropTypes.func,\n    dayWrapperComponent: elementType,\n    eventComponent: elementType,\n    eventWrapperComponent: elementType.isRequired,\n  };\n\n  static defaultProps = {\n    dragThroughEvents: true,\n    timeslots: 2,\n  };\n\n  state = { selecting: false };\n\n  componentDidMount() {\n    this.props.selectable\n    && this._selectable()\n  }\n\n  componentWillUnmount() {\n    this._teardownSelectable();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selectable && !this.props.selectable)\n      this._selectable();\n    if (!nextProps.selectable && this.props.selectable)\n      this._teardownSelectable();\n  }\n\n  render() {\n    const {\n      min,\n      max,\n      step,\n      now,\n      selectRangeFormat,\n      culture,\n      ...props\n    } = this.props\n\n    this._totalMin = dates.diff(min, max, 'minutes')\n    let { selecting, startSlot, endSlot } = this.state\n    let style = this._slotStyle(startSlot, endSlot)\n\n    let selectDates = {\n      start: this.state.startDate,\n      end: this.state.endDate\n    };\n\n    return (\n      <TimeColumn\n        {...props}\n        className={cn(\n          'rbc-day-slot',\n          dates.isToday(max) && 'rbc-today'\n        )}\n        now={now}\n        min={min}\n        max={max}\n        step={step}\n      >\n        {this.renderEvents()}\n\n        {selecting &&\n          <div className='rbc-slot-selection' style={style}>\n              <span>\n              { localizer.format(selectDates, selectRangeFormat, culture) }\n              </span>\n          </div>\n        }\n      </TimeColumn>\n    );\n  }\n\n  renderEvents = () => {\n    let {\n        events\n      , min\n      , max\n      , showMultiDayTimes\n      , culture\n      , eventPropGetter\n      , selected\n      , messages\n      , eventComponent\n      , eventTimeRangeFormat\n      , eventTimeRangeStartFormat\n      , eventTimeRangeEndFormat\n      , eventWrapperComponent: EventWrapper\n      , rtl: isRtl\n      , step\n      , timeslots\n      , startAccessor, endAccessor, titleAccessor } = this.props;\n\n    let EventComponent = eventComponent\n\n    let styledEvents = getStyledEvents({\n      events, startAccessor, endAccessor, min, showMultiDayTimes, totalMin: this._totalMin, step, timeslots\n    })\n\n    return styledEvents.map(({ event, style }, idx) => {\n      let _eventTimeRangeFormat = eventTimeRangeFormat;\n      let _continuesPrior = false;\n      let _continuesAfter = false;\n      let start = get(event, startAccessor)\n      let end = get(event, endAccessor)\n\n      if (start < min) {\n        start = min;\n        _continuesPrior = true;\n        _eventTimeRangeFormat = eventTimeRangeEndFormat;\n      }\n\n      if (end > max) {\n        end = max;\n        _continuesAfter = true;\n        _eventTimeRangeFormat = eventTimeRangeStartFormat;\n      }\n\n      let continuesPrior = startsBefore(start, min)\n      let continuesAfter = startsAfter(end, max)\n\n      let title = get(event, titleAccessor)\n      let label;\n      if (_continuesPrior && _continuesAfter) {\n        label = messages.allDay;\n      } else {\n          label = localizer.format({start, end}, _eventTimeRangeFormat, culture);\n      }\n\n      let _isSelected = isSelected(event, selected)\n\n      if (eventPropGetter)\n        var { style: xStyle, className } = eventPropGetter(event, start, end, _isSelected)\n\n      // edited by onursimsek94\n      if (event.bgColor) // added\n        var bgColorStyle = {backgroundColor: event.bgColor} // added\n\n      let { height, top, width, xOffset } = style\n\n      return (\n        <EventWrapper event={event} key={'evt_' + idx}>\n          <div\n            style={{\n              ...xStyle,\n              top: `${top}%`,\n              height: `${height}%`,\n              [isRtl ? 'right' : 'left']: `${Math.max(0, xOffset)}%`,\n              width: `${width}%`,\n              ...bgColorStyle // added\n            }}\n            title={(typeof label === 'string' ? label + ': ' : '') + title }\n            onClick={(e) => this._select(event, e)}\n            onDoubleClick={(e) => this._doubleClick(event, e)}\n            className={cn('rbc-event', className, {\n              'rbc-selected': _isSelected,\n              'rbc-event-continues-earlier': continuesPrior,\n              'rbc-event-continues-later': continuesAfter,\n              'rbc-event-continues-day-prior': _continuesPrior,\n              'rbc-event-continues-day-after': _continuesAfter\n            })}\n          >\n            <div className='rbc-event-label'>{label}</div>\n            <div className='rbc-event-content'>\n              { EventComponent\n                ? <EventComponent event={event} title={title}/>\n                : title\n              }\n            </div>\n          </div>\n        </EventWrapper>\n      )\n    })\n  };\n\n  _slotStyle = (startSlot, endSlot) => {\n    let top = ((startSlot / this._totalMin) * 100);\n    let bottom = ((endSlot / this._totalMin) * 100);\n\n    return {\n      top: top + '%',\n      height: bottom - top + '%'\n    }\n  };\n\n  _selectable = () => {\n    let node = findDOMNode(this);\n    let selector = this._selector = new Selection(()=> findDOMNode(this), {\n      longPressThreshold: this.props.longPressThreshold,\n    })\n\n    let maybeSelect = (box) => {\n      let onSelecting = this.props.onSelecting\n      let current = this.state || {};\n      let state = selectionState(box);\n      let { startDate: start, endDate: end } = state;\n\n      if (onSelecting) {\n        if (\n          (dates.eq(current.startDate, start, 'minutes') &&\n          dates.eq(current.endDate, end, 'minutes')) ||\n          onSelecting({ start, end }) === false\n        )\n          return\n      }\n\n      this.setState(state)\n    }\n\n    let selectionState = ({ y }) => {\n      let { step, min, max } = this.props;\n      let { top, bottom } = getBoundsForNode(node)\n\n      let mins = this._totalMin;\n\n      let range = Math.abs(top - bottom)\n\n      let current = (y - top) / range;\n\n      current = snapToSlot(minToDate(mins * current, min), step)\n\n      if (!this.state.selecting)\n        this._initialDateSlot = current\n\n      let initial = this._initialDateSlot;\n\n      if (dates.eq(initial, current, 'minutes'))\n        current = dates.add(current, step, 'minutes')\n\n      let start = dates.max(min, dates.min(initial, current))\n      let end = dates.min(max, dates.max(initial, current))\n\n      return {\n        selecting: true,\n        startDate: start,\n        endDate: end,\n        startSlot: positionFromDate(start, min, this._totalMin),\n        endSlot: positionFromDate(end, min, this._totalMin)\n      }\n    }\n\n    let selectorClicksHandler = (box, actionType) => {\n      if (!isEvent(findDOMNode(this), box))\n        this._selectSlot({ ...selectionState(box), action: actionType })\n\n      this.setState({ selecting: false })\n    }\n\n    selector.on('selecting', maybeSelect)\n    selector.on('selectStart', maybeSelect)\n\n    selector.on('beforeSelect', (box) => {\n      if (this.props.selectable !== 'ignoreEvents') return\n\n      return !isEvent(findDOMNode(this), box)\n    })\n\n    selector\n      .on('click', box => selectorClicksHandler(box, 'click'))\n\n    selector\n      .on('doubleClick', (box) => selectorClicksHandler(box, 'doubleClick'))\n\n    selector\n      .on('select', () => {\n        if (this.state.selecting) {\n          this._selectSlot({ ...this.state, action: 'select' })\n          this.setState({ selecting: false })\n        }\n      })\n  };\n\n  _teardownSelectable = () => {\n    if (!this._selector) return\n    this._selector.teardown();\n    this._selector = null;\n  };\n\n  _selectSlot = ({ startDate, endDate, action }) => {\n    let current = startDate\n      , slots = [];\n\n    while (dates.lte(current, endDate)) {\n      slots.push(current)\n      current = dates.add(current, this.props.step, 'minutes')\n    }\n\n    notify(this.props.onSelectSlot, {\n      slots,\n      start: startDate,\n      end: endDate,\n      action\n    })\n  };\n\n  _select = (...args) => {\n    notify(this.props.onSelectEvent, args)\n  };\n\n  _doubleClick = (...args) => {\n    notify(this.props.onDoubleClickEvent, args)\n  };\n}\n\n\nfunction minToDate(min, date){\n  var dt = new Date(date)\n    , totalMins = dates.diff(dates.startOf(date, 'day'), date, 'minutes');\n\n  dt = dates.hours(dt, 0);\n  dt = dates.minutes(dt, totalMins + min);\n  dt = dates.seconds(dt, 0)\n  return dates.milliseconds(dt, 0)\n}\n\nexport default DayColumn;\n"]},"metadata":{},"sourceType":"module"}