{"ast":null,"code":"import _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Components/CustomerList.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddCustomer from './AddCustomer';\nimport EditCustomer from './EditCustomer';\nimport { styles } from '../styleDef';\n\nvar CustomerList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomerList, _Component);\n\n  function CustomerList(props) {\n    var _this;\n\n    _classCallCheck(this, CustomerList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerList).call(this, props));\n\n    _this.loadCustomers = function () {\n      fetch('https://customerrest.herokuapp.com/api/customers').then(function (response) {\n        return response.json();\n      }).then(function (jsondata) {\n        return _this.setState({\n          customers: jsondata.content\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.deleteCustomer = function (customerLink) {\n      if (window.confirm(\"Are you sure?\")) {\n        fetch(customerLink, {\n          method: 'DELETE'\n        }).then(function (res) {\n          return _this.loadCustomers();\n        }).then(function (res) {\n          return _this.setState({\n            open: true,\n            message: 'Customer deleted'\n          });\n        }).catch(function (err) {\n          return console.error(err);\n        });\n      }\n    };\n\n    _this.saveCustomer = function (customer) {\n      fetch('https://customerrest.herokuapp.com/api/customers', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n      }).then(function (res) {\n        return _this.loadCustomers();\n      }).then(function (res) {\n        return _this.setState({\n          open: true,\n          message: 'Customer added successfully'\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.modifyCustomer = function (link, customer) {\n      fetch(link, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n      }).then(function (res) {\n        return _this.loadCustomers();\n      }).then(function (res) {\n        return _this.setState({\n          open: true,\n          message: 'Changes saved'\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      customers: [],\n      open: false,\n      message: ''\n    };\n    return _this;\n  } //Fetch customers\n\n\n  _createClass(CustomerList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCustomers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var columns = [{\n        Header: 'First name',\n        accessor: 'firstname',\n        minwidth: 150\n      }, {\n        Header: 'Last name',\n        accessor: 'lastname',\n        minwidth: 150\n      }, {\n        Header: 'Street address',\n        accessor: 'streetaddress',\n        minwidth: 150\n      }, {\n        Header: 'Postcode',\n        accessor: 'postcode',\n        minwidth: 100\n      }, {\n        Header: 'City',\n        accessor: 'city',\n        minwidth: 100\n      }, {\n        Header: 'E-mail',\n        accessor: 'email',\n        minwidth: 150\n      }, {\n        Header: 'Phone',\n        accessor: 'phone',\n        minwidth: 150\n      }, {\n        Header: '',\n        accessor: 'links[0].href',\n        filterable: false,\n        sortable: false,\n        Cell: function Cell(_ref) {\n          var value = _ref.value,\n              row = _ref.row;\n          return React.createElement(EditCustomer, {\n            modifyCustomer: _this2.modifyCustomer,\n            link: value,\n            customer: row,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        }\n      }, {\n        Header: '',\n        accessor: 'links[0].href',\n        filterable: false,\n        sortable: false,\n        Cell: function Cell(_ref2) {\n          var value = _ref2.value;\n          return React.createElement(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            disableRipple: true,\n            className: classNames(classes.margin, classes.bootstrapRoot, classes.bootstrapDanger, classes.button),\n            onClick: function onClick() {\n              return _this2.deleteCustomer(value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, \"Delete\", React.createElement(DeleteIcon, {\n            className: classes.rightIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }));\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(AddCustomer, {\n        saveCustomer: this.saveCustomer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(ReactTable, {\n        className: \"-striped -highlight\",\n        sortable: true,\n        filterable: true,\n        data: this.state.customers,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        onClose: this.handleClose,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomerList;\n}(Component);\n\nCustomerList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomerList);","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Components/CustomerList.js"],"names":["React","Component","ReactTable","Button","DeleteIcon","PropTypes","classNames","withStyles","Snackbar","AddCustomer","EditCustomer","styles","CustomerList","props","loadCustomers","fetch","then","response","json","jsondata","setState","customers","content","catch","err","console","error","deleteCustomer","customerLink","window","confirm","method","res","open","message","saveCustomer","customer","headers","body","JSON","stringify","modifyCustomer","link","handleClose","state","classes","columns","Header","accessor","minwidth","filterable","sortable","Cell","value","row","margin","bootstrapRoot","bootstrapDanger","button","rightIcon","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddCustomer from './AddCustomer';\nimport EditCustomer from './EditCustomer';\nimport { styles } from '../styleDef';\n\n\nclass CustomerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { customers: [], open: false, message: '' };\n  }\n  //Fetch customers\n  componentDidMount() {\n    this.loadCustomers();\n  }\n\n  loadCustomers = () => {\n    fetch('https://customerrest.herokuapp.com/api/customers')\n      .then(response => response.json())\n      .then(jsondata => this.setState({ customers: jsondata.content }))\n      .catch(err => console.error(err));\n  };\n\n  deleteCustomer = (customerLink) => {\n    if (window.confirm(\"Are you sure?\")) {\n      fetch(customerLink, { method: 'DELETE' })\n        .then(res => this.loadCustomers())\n        .then(res => this.setState({ open: true, message: 'Customer deleted' }))\n        .catch(err => console.error(err));\n    }\n  };\n\n  saveCustomer = (customer) => {\n    fetch('https://customerrest.herokuapp.com/api/customers',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n\n      })\n      .then(res => this.loadCustomers())\n      .then(res => this.setState({ open: true, message: 'Customer added successfully' }))\n      .catch(err => console.error(err));\n  }\n\n  modifyCustomer = (link, customer) => {\n    fetch(link,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(customer)\n\n      })\n      .then(res => this.loadCustomers())\n      .then(res => this.setState({ open: true, message: 'Changes saved' }))\n      .catch(err => console.error(err));\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const columns = [\n      {\n        Header: 'First name',\n        accessor: 'firstname',\n        minwidth: 150,\n      },\n      {\n        Header: 'Last name',\n        accessor: 'lastname',\n        minwidth: 150,\n      },\n      {\n        Header: 'Street address',\n        accessor: 'streetaddress',\n        minwidth: 150,\n      },\n      {\n        Header: 'Postcode',\n        accessor: 'postcode',\n        minwidth: 100,\n      },\n      {\n        Header: 'City',\n        accessor: 'city',\n        minwidth: 100,\n      },\n      {\n        Header: 'E-mail',\n        accessor: 'email',\n        minwidth: 150,\n      },\n      {\n        Header: 'Phone',\n        accessor: 'phone',\n        minwidth: 150,\n      },\n      {\n        Header: '',\n        accessor: 'links[0].href',\n        filterable: false,\n        sortable: false,\n        \n        Cell: ({ value, row }) => <EditCustomer modifyCustomer={this.modifyCustomer} link={value} customer={row} />\n      },\n      {\n        Header: '',\n        accessor: 'links[0].href',\n        filterable: false,\n        sortable: false,\n        Cell: ({ value }) =>\n          <Button color=\"primary\"\n            variant=\"contained\"\n            disableRipple\n            className={classNames(classes.margin, classes.bootstrapRoot, classes.bootstrapDanger, classes.button)}\n            onClick={() => this.deleteCustomer(value)}>Delete<DeleteIcon className={classes.rightIcon} />\n          </Button>\n      },\n\n    ];\n    return (\n      <div>\n        <AddCustomer saveCustomer={this.saveCustomer} />\n        <ReactTable className=\"-striped -highlight\" sortable={true} filterable={true} data={this.state.customers} columns={columns}></ReactTable>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.open}\n          autoHideDuration={3000}\n          onClose={this.handleClose}\n          message={this.state.message}\n        />\n      </div>\n    );\n  }\n}\n\nCustomerList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomerList);\n"]},"metadata":{},"sourceType":"module"}