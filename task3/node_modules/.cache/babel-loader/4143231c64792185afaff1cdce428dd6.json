{"ast":null,"code":"import _objectSpread from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/EventRow.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport EventRowMixin from './EventRowMixin';\n\nvar EventRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventRow, _React$Component);\n\n  function EventRow() {\n    _classCallCheck(this, EventRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventRow).apply(this, arguments));\n  }\n\n  _createClass(EventRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var segments = this.props.segments;\n      var lastEnd = 1;\n      return React.createElement(\"div\", {\n        className: \"rbc-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, segments.reduce(function (row, _ref, li) {\n        var event = _ref.event,\n            left = _ref.left,\n            right = _ref.right,\n            span = _ref.span;\n        var key = '_lvl_' + li;\n        var gap = left - lastEnd;\n        var content = EventRowMixin.renderEvent(_this.props, event);\n        if (gap) row.push(EventRowMixin.renderSpan(_this.props, gap, key + '_gap'));\n        row.push(EventRowMixin.renderSpan(_this.props, span, key, content));\n        lastEnd = right + 1;\n        return row;\n      }, []));\n    }\n  }]);\n\n  return EventRow;\n}(React.Component);\n\nEventRow.propTypes = _objectSpread({\n  segments: PropTypes.array\n}, EventRowMixin.propTypes);\nEventRow.defaultProps = _objectSpread({}, EventRowMixin.defaultProps);\nexport default EventRow;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/EventRow.js"],"names":["PropTypes","React","EventRowMixin","EventRow","segments","props","lastEnd","reduce","row","li","event","left","right","span","key","gap","content","renderEvent","push","renderSpan","Component","propTypes","array","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,Q;;;;;;;;;;;;;6BAQK;AAAA;;AAAA,UACDC,QADC,GACY,KAAKC,KADjB,CACDD,QADC;AAGP,UAAIE,OAAO,GAAG,CAAd;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,QAAQ,CAACG,MAAT,CAAgB,UAACC,GAAD,QAAoCC,EAApC,EAA2C;AAAA,YAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,YAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,YAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,YAAfC,IAAe,QAAfA,IAAe;AAC1D,YAAIC,GAAG,GAAG,UAAUL,EAApB;AACA,YAAIM,GAAG,GAAGJ,IAAI,GAAGL,OAAjB;AAEA,YAAIU,OAAO,GAAGd,aAAa,CAACe,WAAd,CAA0B,KAAI,CAACZ,KAA/B,EAAsCK,KAAtC,CAAd;AAEA,YAAIK,GAAJ,EACEP,GAAG,CAACU,IAAJ,CAAShB,aAAa,CAACiB,UAAd,CAAyB,KAAI,CAACd,KAA9B,EAAqCU,GAArC,EAA0CD,GAAG,GAAG,MAAhD,CAAT;AAEFN,QAAAA,GAAG,CAACU,IAAJ,CAAShB,aAAa,CAACiB,UAAd,CAAyB,KAAI,CAACd,KAA9B,EAAqCQ,IAArC,EAA2CC,GAA3C,EAAgDE,OAAhD,CAAT;AAEAV,QAAAA,OAAO,GAAGM,KAAK,GAAG,CAAlB;AAEA,eAAOJ,GAAP;AACD,OAdA,EAcE,EAdF,CADH,CADF;AAmBD;;;;EAhCoBP,KAAK,CAACmB,S;;AAAvBjB,Q,CACGkB,S;AACLjB,EAAAA,QAAQ,EAAEJ,SAAS,CAACsB;GACjBpB,aAAa,CAACmB,S;AAHflB,Q,CAKGoB,Y,qBACFrB,aAAa,CAACqB,Y;AA6BrB,eAAepB,QAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport EventRowMixin from './EventRowMixin'\n\nclass EventRow extends React.Component {\n  static propTypes = {\n    segments: PropTypes.array,\n    ...EventRowMixin.propTypes,\n  }\n  static defaultProps = {\n    ...EventRowMixin.defaultProps,\n  }\n  render() {\n    let { segments } = this.props\n\n    let lastEnd = 1\n\n    return (\n      <div className=\"rbc-row\">\n        {segments.reduce((row, { event, left, right, span }, li) => {\n          let key = '_lvl_' + li\n          let gap = left - lastEnd\n\n          let content = EventRowMixin.renderEvent(this.props, event)\n\n          if (gap)\n            row.push(EventRowMixin.renderSpan(this.props, gap, key + '_gap'))\n\n          row.push(EventRowMixin.renderSpan(this.props, span, key, content))\n\n          lastEnd = right + 1\n\n          return row\n        }, [])}\n      </div>\n    )\n  }\n}\n\nexport default EventRow\n"]},"metadata":{},"sourceType":"module"}