{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/Day.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport dates from './utils/dates';\nimport { navigate } from './utils/constants';\nimport TimeGrid from './TimeGrid';\nimport localizer from './localizer';\n\nvar Day =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Day, _React$Component);\n\n  function Day() {\n    _classCallCheck(this, Day);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Day).apply(this, arguments));\n  }\n\n  _createClass(Day, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          date = _this$props.date,\n          props = _objectWithoutProperties(_this$props, [\"date\"]);\n\n      return React.createElement(TimeGrid, Object.assign({}, props, {\n        range: [dates.startOf(date, 'day')],\n        eventOffset: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Day;\n}(React.Component);\n\nDay.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired\n};\n\nDay.navigate = function (date, action) {\n  switch (action) {\n    case navigate.PREVIOUS:\n      return dates.add(date, -1, 'day');\n\n    case navigate.NEXT:\n      return dates.add(date, 1, 'day');\n\n    default:\n      return date;\n  }\n};\n\nDay.title = function (date, _ref) {\n  var formats = _ref.formats,\n      culture = _ref.culture;\n  return localizer.format(date, formats.dayHeaderFormat, culture);\n};\n\nexport default Day;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/Day.js"],"names":["PropTypes","React","dates","navigate","TimeGrid","localizer","Day","props","date","startOf","Component","propTypes","instanceOf","Date","isRequired","action","PREVIOUS","add","NEXT","title","formats","culture","format","dayHeaderFormat"],"mappings":";;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAuB,aAAvB;;IAEMC,G;;;;;;;;;;;;;6BAKK;AAAA,wBACkB,KAAKC,KADvB;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACQD,KADR;;AAGP,aACE,oBAAC,QAAD,oBAAcA,KAAd;AAAqB,QAAA,KAAK,EAAE,CAACL,KAAK,CAACO,OAAN,CAAcD,IAAd,EAAoB,KAApB,CAAD,CAA5B;AAA0D,QAAA,WAAW,EAAE,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;;;EAXeP,KAAK,CAACS,S;;AAAlBJ,G,CACGK,S,GAAY;AACjBH,EAAAA,IAAI,EAAER,SAAS,CAACY,UAAV,CAAqBC,IAArB,EAA2BC;AADhB,C;;AAarBR,GAAG,CAACH,QAAJ,GAAe,UAACK,IAAD,EAAOO,MAAP,EAAgB;AAC7B,UAAQA,MAAR;AACE,SAAKZ,QAAQ,CAACa,QAAd;AACE,aAAOd,KAAK,CAACe,GAAN,CAAUT,IAAV,EAAgB,CAAC,CAAjB,EAAoB,KAApB,CAAP;;AAEF,SAAKL,QAAQ,CAACe,IAAd;AACE,aAAOhB,KAAK,CAACe,GAAN,CAAUT,IAAV,EAAgB,CAAhB,EAAmB,KAAnB,CAAP;;AAEF;AACE,aAAOA,IAAP;AARJ;AAUD,CAXD;;AAcAF,GAAG,CAACa,KAAJ,GAAY,UAACX,IAAD;AAAA,MAASY,OAAT,QAASA,OAAT;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,SACVhB,SAAS,CAACiB,MAAV,CAAiBd,IAAjB,EAAuBY,OAAO,CAACG,eAA/B,EAAgDF,OAAhD,CADU;AAAA,CAAZ;;AAIA,eAAef,GAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport dates from './utils/dates';\nimport { navigate } from './utils/constants';\nimport TimeGrid from './TimeGrid';\nimport localizer  from './localizer';\n\nclass Day extends React.Component {\n  static propTypes = {\n    date: PropTypes.instanceOf(Date).isRequired,\n  };\n\n  render() {\n    let { date, ...props } = this.props;\n\n    return (\n      <TimeGrid {...props} range={[dates.startOf(date, 'day')]} eventOffset={10} />\n    );\n  }\n}\n\nDay.navigate = (date, action)=>{\n  switch (action){\n    case navigate.PREVIOUS:\n      return dates.add(date, -1, 'day');\n\n    case navigate.NEXT:\n      return dates.add(date, 1, 'day')\n\n    default:\n      return date;\n  }\n}\n\n\nDay.title = (date, { formats, culture }) =>\n  localizer.format(date, formats.dayHeaderFormat, culture);\n\n\nexport default Day\n"]},"metadata":{},"sourceType":"module"}