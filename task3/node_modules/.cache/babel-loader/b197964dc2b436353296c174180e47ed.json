{"ast":null,"code":"import _objectSpread from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yukoenqvist/personaltrainer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yukoenqvist/personaltrainer/src/EventCell.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport dates from './utils/dates';\nimport { accessor, elementType } from './utils/propTypes';\nimport { accessor as get } from './utils/accessors';\nvar propTypes = {\n  event: PropTypes.object.isRequired,\n  slotStart: PropTypes.instanceOf(Date),\n  slotEnd: PropTypes.instanceOf(Date),\n  selected: PropTypes.bool,\n  eventPropGetter: PropTypes.func,\n  titleAccessor: accessor,\n  allDayAccessor: accessor,\n  startAccessor: accessor,\n  endAccessor: accessor,\n  eventComponent: elementType,\n  eventWrapperComponent: elementType.isRequired,\n  onSelect: PropTypes.func,\n  onDoubleClick: PropTypes.func\n};\n\nvar EventCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventCell, _React$Component);\n\n  function EventCell() {\n    _classCallCheck(this, EventCell);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventCell).apply(this, arguments));\n  }\n\n  _createClass(EventCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          event = _this$props.event,\n          selected = _this$props.selected,\n          eventPropGetter = _this$props.eventPropGetter,\n          startAccessor = _this$props.startAccessor,\n          endAccessor = _this$props.endAccessor,\n          titleAccessor = _this$props.titleAccessor,\n          slotStart = _this$props.slotStart,\n          slotEnd = _this$props.slotEnd,\n          onSelect = _this$props.onSelect,\n          _onDoubleClick = _this$props.onDoubleClick,\n          Event = _this$props.eventComponent,\n          EventWrapper = _this$props.eventWrapperComponent,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"event\", \"selected\", \"eventPropGetter\", \"startAccessor\", \"endAccessor\", \"titleAccessor\", \"slotStart\", \"slotEnd\", \"onSelect\", \"onDoubleClick\", \"eventComponent\", \"eventWrapperComponent\"]);\n\n      var title = get(event, titleAccessor),\n          end = get(event, endAccessor),\n          start = get(event, startAccessor),\n          isAllDay = get(event, props.allDayAccessor),\n          continuesPrior = dates.lt(start, slotStart, 'day'),\n          continuesAfter = dates.gte(end, slotEnd, 'day');\n      if (eventPropGetter) var _eventPropGetter = eventPropGetter(event, start, end, selected),\n          style = _eventPropGetter.style,\n          xClassName = _eventPropGetter.className; // edited by onursimsek94\n\n      if (event.bgColor) // added\n        var bgColorStyle = {\n          backgroundColor: event.bgColor // added\n\n        };\n      return React.createElement(EventWrapper, {\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: _objectSpread({}, props.style, style, bgColorStyle) // added\n        ,\n        className: cn('rbc-event', className, xClassName, {\n          'rbc-selected': selected,\n          'rbc-event-allday': isAllDay || dates.diff(start, dates.ceil(end, 'day'), 'day') > 1,\n          'rbc-event-continues-prior': continuesPrior,\n          'rbc-event-continues-after': continuesAfter\n        }),\n        onClick: function onClick(e) {\n          return onSelect(event, e);\n        },\n        onDoubleClick: function onDoubleClick(e) {\n          return _onDoubleClick(event, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"rbc-event-content\",\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, Event ? React.createElement(Event, {\n        event: event,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : title)));\n    }\n  }]);\n\n  return EventCell;\n}(React.Component);\n\nEventCell.propTypes = propTypes;\nexport default EventCell;","map":{"version":3,"sources":["/Users/yukoenqvist/personaltrainer/src/EventCell.js"],"names":["PropTypes","React","cn","dates","accessor","elementType","get","propTypes","event","object","isRequired","slotStart","instanceOf","Date","slotEnd","selected","bool","eventPropGetter","func","titleAccessor","allDayAccessor","startAccessor","endAccessor","eventComponent","eventWrapperComponent","onSelect","onDoubleClick","EventCell","props","className","Event","EventWrapper","title","end","start","isAllDay","continuesPrior","lt","continuesAfter","gte","style","xClassName","bgColor","bgColorStyle","backgroundColor","diff","ceil","e","Component"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport dates from './utils/dates';\nimport { accessor, elementType } from './utils/propTypes';\nimport { accessor as get } from './utils/accessors';\n\nlet propTypes = {\n  event: PropTypes.object.isRequired,\n  slotStart: PropTypes.instanceOf(Date),\n  slotEnd: PropTypes.instanceOf(Date),\n\n  selected: PropTypes.bool,\n  eventPropGetter: PropTypes.func,\n  titleAccessor: accessor,\n  allDayAccessor: accessor,\n  startAccessor: accessor,\n  endAccessor: accessor,\n\n  eventComponent: elementType,\n  eventWrapperComponent: elementType.isRequired,\n  onSelect: PropTypes.func,\n  onDoubleClick: PropTypes.func\n}\n\nclass EventCell extends React.Component {\n  render() {\n    let {\n        className\n      , event\n      , selected\n      , eventPropGetter\n      , startAccessor, endAccessor, titleAccessor\n      , slotStart\n      , slotEnd\n      , onSelect\n      , onDoubleClick\n      , eventComponent: Event\n      , eventWrapperComponent: EventWrapper\n      , ...props } = this.props;\n\n    let title = get(event, titleAccessor)\n      , end = get(event, endAccessor)\n      , start = get(event, startAccessor)\n      , isAllDay = get(event, props.allDayAccessor)\n      , continuesPrior = dates.lt(start, slotStart, 'day')\n      , continuesAfter = dates.gte(end, slotEnd, 'day')\n\n    if (eventPropGetter)\n      var { style, className: xClassName } = eventPropGetter(event, start, end, selected);\n\n    // edited by onursimsek94\n    if (event.bgColor) // added\n      var bgColorStyle = {backgroundColor: event.bgColor} // added\n\n    return (\n      <EventWrapper event={event}>\n        <div\n          style={{...props.style, ...style, ...bgColorStyle}} // added\n          className={cn('rbc-event', className, xClassName, {\n            'rbc-selected': selected,\n            'rbc-event-allday': isAllDay || dates.diff(start, dates.ceil(end, 'day'), 'day') > 1,\n            'rbc-event-continues-prior': continuesPrior,\n            'rbc-event-continues-after': continuesAfter\n          })}\n          onClick={(e) => onSelect(event, e)}\n          onDoubleClick={(e) => onDoubleClick(event, e)}\n        >\n          <div className='rbc-event-content' title={title}>\n            { Event\n              ? <Event event={event} title={title}/>\n              : title\n            }\n          </div>\n        </div>\n      </EventWrapper>\n    );\n  }\n}\n\nEventCell.propTypes = propTypes;\n\nexport default EventCell\n"]},"metadata":{},"sourceType":"module"}